!function(e){var t={};function a(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=t,a.d=function(e,t,r){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(a.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)a.d(r,n,function(t){return e[t]}.bind(null,n));return r},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=33)}([function(e,t){e.exports=require("express-validator/check")},function(e,t,a){"use strict";var r=a(8),n=a.n(r),s=a(9),o=a.n(s);const c=n.a.Schema,i=e=>({type:c.Types.ObjectId,ref:e}),d=new c({name:String,description:String,url:String,imageUrl:String,createdAt:Date,startAt:Date,price:{type:Number,min:0},rewards:{type:Map,of:String,default:{}},rules:{type:Map,of:Number,default:{}},isForecastingActive:{type:Boolean,default:!1},isStarted:{type:Boolean,default:!1},isFinalized:{type:Boolean,default:!1},winners:[{_id:!1,id:i("User"),position:{type:String,enum:["summoner","viewer"]},place:Number}],creator:i("User"),summoners:[i("User")],applicants:[{user:i("User"),status:{type:String,enum:["PENDING","REJECTED","ACCEPTED"],default:"PENDING"}}],viewers:[{userId:String,summoners:[String]}]},{toObject:{virtuals:!0},toJSON:{virtuals:!0}});d.virtual("matches",{ref:"Match",localField:"_id",foreignField:"tournamentId"}),d.virtual("isEmpty").get(function(){return!(!o()(this.rules)&&!o()(this.rewards)&&0!==this.matches.length)}),d.virtual("isApplicationsAvailable").get(function(){return!(this.isEmpty||this.isForecastingActive||this.isStarted)}),t.a=n.a.model("Tournament",d)},function(e,t,a){"use strict";a.d(t,"b",function(){return o}),a.d(t,"a",function(){return c}),a.d(t,"c",function(){return i}),a.d(t,"d",function(){return d});var r=a(15),n=a(13),s=a.n(n);a(9);const o=async(e,t)=>{const a=Object.keys(e)[0],r=Object.values(e)[0];if(!r)return!0;if(await t.findOne(e))throw new Error(`Entity with key: ${a} and value: ${r} is already exist`);return!0},c=async(e,t)=>{let a=!1;try{await t.findById(e);a=!0}catch(e){}if(!a)throw new Error(`Entity with _id: ${e} doesn't exist`);return!0},i=(e,t)=>{const a=Object(r.a)(t),n=s()(Object.keys(e),a);if(n.length)throw new Error(`${t.modelName} shouldn't contain ${n.join(", ")} fields`);return!0},d=(e,t)=>{if(t.decoded)return!0;throw new Error("You are not authorized")}},function(e,t,a){"use strict";var r=a(0),n=e=>(t,a)=>{const n=Object(r.validationResult)(t);return n.isEmpty()?e(t,a):a.status(400).json({errors:n.array()})},s=(e,t=[],a={})=>{if(0===t.length)return e.map(e=>({...e,points:0}));if(e.includes(void 0))return;const r=e.reduce((e,t)=>({...e,[t._id]:0}),{});for(const e of t)if(0!==e.playersResults.length)for(const t of e.playersResults){const e=Object.entries(t.results).reduce((e,[t,r])=>e+=a[t]*r,0);r[t.userId]+=e}return e.map(e=>({summoner:String(e),points:r[e._id]})).sort((e,t)=>t.points-e.points)},o=(e,t=[])=>{const a=t.reduce((e,t)=>({...e,[t.summoner]:t.points}),{});return e.summoners.reduce((e,t)=>e+=a[t],0)},c=(e,t=[])=>{const a=t.reduce((e,t)=>({...e,[t.summoner]:t.points}),{});return e.reduce((e,t)=>{const r=t.summoners.reduce((e,t)=>e+=a[t],0);return e.push({viewerId:t.userId,points:r}),e},[]).sort((e,t)=>t.points-e.points)};a(15);a.d(t,"a",function(){return s}),a.d(t,"b",function(){return o}),a.d(t,"c",function(){return c}),a.d(t,"d",function(){return n})},function(e,t,a){"use strict";var r=a(8),n=a.n(r),s=a(10);const o=n.a.Schema;t.a=n.a.model("User",new o({username:{type:String,unique:!0,required:!0},email:{type:String,unique:!0,required:!0,partialFilterExpression:{email:{$type:"string"}}},imageUrl:{type:String,default:""},about:{type:String,default:""},isAdmin:{type:Boolean,default:!1},isVerified:{type:Boolean,default:!1},canProvideTournaments:{type:Boolean,default:!1},twitchAccount:{type:String,default:""},summonerName:{type:String,default:""},contact:{type:String,default:""},regionId:{type:String,enum:["",...s.a],default:""},preferredPosition:{type:String,enum:["","adc","mid","top","jungle","support"],default:""}},{toObject:{virtuals:!0}}))},function(e,t){e.exports=require("express")},function(e,t,a){"use strict";var r=a(8),n=a.n(r);const s=n.a.Schema;t.a=n.a.model("Reward",new s({userId:(e=>({type:s.Types.ObjectId,ref:e,default:null}))("User"),key:{type:String,unique:!0},isClaimed:{type:Boolean,default:!1},description:{type:String},image:{type:String}}))},function(e,t){e.exports=require("lodash/pick")},function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("lodash/isEmpty")},function(e,t,a){"use strict";a.d(t,"a",function(){return r}),a.d(t,"b",function(){return n});const r=["BR","EUNE","EUW","JP","KR","LAN","LAS","NA","OCE","TR","RU","PBE"],n=[{name:"kills",range:[0,10]},{name:"deaths",range:[0,10]},{name:"assists",range:[0,10]}]},function(e,t){e.exports=require("lodash/defaults")},function(e,t){e.exports=require("lodash/find")},function(e,t){e.exports=require("lodash/difference")},function(e,t,a){"use strict";a(16);var r=a(5),n=a.n(r),s=a(1),o=a(8),c=a.n(o);const i=c.a.Schema,d=e=>({type:i.Types.ObjectId,ref:e});var u=c.a.model("Match",new i({tournamentId:d("Tournament"),name:String,playersResults:[{_id:!1,userId:d("User"),results:{type:Map,of:Number}}],isActive:{type:Boolean,default:!1},startedAt:Date,endAt:Date,updatedAt:Date},{toObject:{virtuals:!0}})),m=async(e,t)=>{const a=await s.a.find({}).populate("winner").populate("creatorId").populate("summoners").populate("applicants").populate("matches").exec();t.json({tournaments:a})},p=a(7),l=a.n(p),b=a(11),j=a.n(b),y=a(0);const f=[Object(y.check)("name").isString().not().isEmpty().withMessage("Enter name"),Object(y.check)("price").not().isEmpty().withMessage("Enter entry price"),Object(y.check)("startAt").not().isEmpty().withMessage("Choose start date")],h=(e=>(t,a)=>{const r=Object(y.validationResult)(t);return r.isEmpty()?e(t,a):a.status(400).json({errors:r.array()})})(async(e,t)=>{try{const a=await s.a.create(j()(l()(e.body,["name","description","startAt","price","url","imageUrl"]),{isReady:!1,url:"",description:"",imageUrl:"",summoners:[],rewards:[],createdAt:Date.now(),creator:e.decoded._id}));t.status(200).json({newTournament:a})}catch(e){t.status(500).json({error:e})}});var w=a(12),O=a.n(w),g=a(2),I=a(3);const v=[Object(y.param)("id").custom(e=>Object(g.a)(e,s.a)),Object(y.param)("id").custom(e=>s.a.findById(e).exec().then(({isReady:e})=>!e||Promise.reject("Can't attend ready tournament"))),Object(y.check)("userId").custom(async(e,{req:t})=>{const{_id:a}=t.decoded,{id:r}=t.params,{applicants:n,summoners:o}=await s.a.findById(r).exec();if(o.includes(a)||O()(n,{user:a}))throw new Error("User already an applicant or summoner");return!0})],_=Object(I.d)(async(e,t)=>{const{id:a}=e.params,{_id:r}=e.decoded,n=await s.a.findByIdAndUpdate(a,{$push:{applicants:{user:r}}});await n.save(),t.json({})}),x=[Object(y.param)("id").custom(e=>Object(g.a)(e,s.a)),Object(y.check)("id").custom(async(e,{req:t})=>{const{_id:a}=t.decoded,{summoners:r}=t.body,{id:n}=t.params;return!0})],S=Object(I.d)(async(e,t)=>{const{id:a}=e.params,{_id:r}=e.decoded,{summoners:n}=e.body;await s.a.update({_id:a},{$push:{viewers:{userId:r,summoners:n}}});const o=await s.a.findById(a).populate("winner").populate("creatorId").populate("applicants").populate("matches").populate("creator","_id username summonerName").exec();t.json(o)});var E=a(19),B=a.n(E),k=a(20),q=a.n(k),A=a(13),N=a.n(A),U=a(21),R=a.n(U),$=a(22);const M=[Object(y.check)().custom((e,{req:t})=>Object(g.d)(e,t)),Object(y.param)("id").custom(e=>Object(g.a)(e,s.a)).custom(async(e,{req:t})=>{const{_id:a}=t.decoded,{creator:r,isReady:n}=await s.a.findById(e);if(String(r)!==String(a))throw new Error("You are not allowed to edit this tournament");if(n)throw new Error("You can't edit rewards after tournament has started");return!0})],P=Object(I.d)(async(e,t)=>{const{id:a}=e.params,{rewards:r}=e.body;await s.a.update({_id:a},{$set:{rewards:r}},{new:!0}).exec();const n=await s.a.findById(a).populate("creatorId").populate("applicants").populate("matches").populate("creator","_id username summonerName").exec();t.json(n)});var T=a(9),C=a.n(T),D=a(6);const F=[Object(y.check)().custom((e,{req:t})=>Object(g.d)(e,t)),Object(y.param)("id").custom(e=>Object(g.a)(e,s.a)),Object(y.body)().custom(async(e,{req:t})=>{const{id:a}=t.params,r=await s.a.findById(a).select("rewards");return C()(r),!0})],z=Object(I.d)(async(e,t)=>{const{id:a}=e.params,r=await s.a.findById(a).select("rewards").lean();if(C()(r))return void t.send({rewards:[]});const n=Object.keys(r.rewards),o=await D.a.find({_id:{$in:n}}).select("-key -isClaimed -userId");t.send(o)}),L=(e=>(t,a)=>{const r=Object(y.validationResult)(t);return r.isEmpty()?e(t,a):a.status(400).json({errors:r.array()})})(async(e,t)=>{const{id:a}=e.params;try{const e=await s.a.findById(a).populate("winner").populate("creatorId").populate("applicants").populate("matches").populate("creator","_id username summonerName").exec();t.json(e)}catch(e){t.json({error:e})}}),Y=[Object(y.check)("id").isMongoId()];var G=a(10);const J=[Object(y.check)().custom((e,{req:t})=>Object(g.d)(e,t)),Object(y.param)("id").custom(e=>Object(g.a)(e,s.a)).custom(async(e,{req:t})=>{const{_id:a}=t.decoded,{creator:r,isReady:n}=await s.a.findById(e);if(String(r)!==String(a))throw new Error("You are not allowed to edit this tournament");if(n){const e=["name","description","url","imageUrl","summoners","rules"],a=N()(Object.keys(t.body),e);if(!a.length)throw new Error(`You can't edit next fields in ready tournament: ${a.join(", ")}`)}return!0}),Object(y.body)().custom(e=>Object(g.c)(e,s.a)),Object(y.body)().custom(({summoners:e})=>{if(!e)return!0;if(e.length>10)throw new Error("You can't add more than 10 summoners");return!0}),Object(y.body)().custom(({rules:e})=>{if(!e)return!0;const t=G.b.map(e=>e.name),a=N()(Object.keys(e),t);if(a.length>0)throw new Error(`Rules object can't contain fields: ${a.join(" ")}`);return!0}),Object($.sanitizeBody)().customSanitizer(e=>B()(e,q()(R.a)))],K=Object(I.d)(async(e,t)=>{const{id:a}=e.params;s.a.findByIdAndUpdate(a,{$set:l()(e.body,["name","description","url","price","rules","summoners"])},{new:!0}).exec().then(t.json).catch(e=>t.json({error:e}))}),V=[Object(y.param)("id").custom(e=>Object(g.a)(e,s.a)),Object(y.param)("id").custom(async e=>{const{isForecastingActive:t}=await s.a.findById(e).exec();if(t)throw new Error("Forecasting is already avalilable");return!0})],W=Object(I.d)(async(e,t)=>{const{id:a}=e.params;await s.a.update({_id:a},{$set:{isForecastingActive:!0}},{new:!0}).exec();const r=await s.a.findById(a).populate("winner").populate("creatorId").populate("applicants").populate("matches").populate("creator","_id username summonerName").exec();t.json(r)}),H=[Object(y.param)("id").custom(e=>Object(g.a)(e,s.a)),Object(y.param)("id").custom(async e=>{const{isStarted:t}=await s.a.findById(e).exec();if(t)throw new Error("Tournamnet is already started");return!0})],Q=Object(I.d)(async(e,t)=>{const{id:a}=e.params;await s.a.update({_id:a},{$set:{isStarted:!0,isForecastingActive:!1}},{new:!0}).exec();const r=await s.a.findById(a).populate("winner").populate("creatorId").populate("applicants").populate("matches").populate("creator","_id username summonerName").exec();t.json(r)});var X=a(4);const Z=[Object(y.param)("id").custom(e=>Object(g.a)(e,s.a)),Object(y.param)("id").custom(async e=>{const{isFinalized:t}=await s.a.findById(e);if(t)throw new Error("Tournament is already finalized");return!0})],ee=Object(I.d)(async(e,t)=>{const{id:a}=e.params,r=await s.a.findById(a).populate("matches").lean(),{rules:n,matches:o,summoners:c,rewards:i,viewers:d}=r,u=r.viewers.map(e=>String(e.userId)),m=(await X.a.find({_id:{$in:[...u,...c]}}).select("_id summonerName"),Object(I.a)(c,o,n)),p=Object(I.c)(d,m),l=m.slice(0,3),b=p.slice(0,3),j={first:1,second:2,third:3},y=Object.entries(i),f=[];for(const[e,t]of y){const[a,r]=t.split("_"),n=j[r],s="summoner"===a?l[n-1].summoner:b[n-1].viewerId;await D.a.findByIdAndUpdate(e,{$set:{userId:s}}),f.push({id:s,position:a,place:n})}await s.a.findByIdAndUpdate(a,{$set:{winners:f,isFinalized:!0}});const h=await s.a.findById(a).populate("creatorId").populate("applicants").populate("matches").populate("creator","_id username summonerName").exec();t.send(h)}),te=[Object(y.check)().custom((e,{req:t})=>Object(g.d)(e,t)),Object(y.param)("id").custom(e=>Object(g.a)(e,s.a))],ae=Object(I.d)(async(e,t)=>{const{id:a}=e.params,{userId:r,newStatus:n}=e.body;try{const e=await s.a.update({_id:a},{$set:{"applicants.$[element].status":n}},{arrayFilters:[{"element.user":r}]}).exec();"ACCEPTED"===n&&await s.a.update({_id:a},{$push:{summoners:r}}).exec(),t.send(e)}catch(e){console.log(e),t.status(400).send({})}}),re=[Object(y.param)("tournamentId").custom(e=>Object(g.a)(e,s.a)),Object(y.body)().not().isEmpty(),Object(y.body)().custom(e=>Object(g.c)(e,u))],ne=Object(I.d)(async(e,t)=>{const{tournamentId:a}=e.params,r=e.body,n=await u.create(r);await s.a.findByIdAndUpdate(a,{$push:{matches:n._id}}).exec(),t.json(n)});var se=a(30),oe=a.n(se);const ce=[Object(y.param)("tournamentId").custom(e=>Object(g.a)(e,s.a)),Object(y.param)("matchId").custom(e=>Object(g.a)(e,u)),Object(y.param)().custom(async(e,{req:t})=>{const{tournamentId:a,matchId:r}=t.params,{matches:n}=await s.a.findById(a).exec();if(!n.includes(r))throw new Error("Match don't exist on this tournament")}),Object(y.body)().not().isEmpty(),Object(y.body)().custom(e=>Object(g.c)(e,u))],ie=Object(I.d)(async(e,t)=>{const{matchId:a}=e.params,r=e.body,n=await u.findByIdAndUpdate(a,{$set:oe()(r,["_id"])});t.json(n)}),de=[Object(y.param)("tournamentId").custom(e=>Object(g.a)(e,s.a)),Object(y.param)("matchId").custom(e=>Object(g.a)(e,u)),Object(y.param)().custom(async(e,{req:t})=>{const{tournamentId:a,matchId:r}=t.params,{matches:n}=await s.a.findById(a).populate("matches").exec();if(!n.find(e=>String(e._id)===String(r)))throw new Error("Match don't exist on this tournament")})],ue=Object(I.d)(async(e,t)=>{const{matchId:a}=e.params;await u.remove({_id:a}),t.json({})}),me=[Object(y.param)("tournamentId").custom(e=>Object(g.a)(e,s.a)),Object(y.param)("matchId").custom(e=>Object(g.a)(e,u)),Object(y.body)().not().isEmpty()],pe=Object(I.d)(async(e,t)=>{const{matchId:a}=e.params,r=e.body,n=await u.findByIdAndUpdate(a,{$set:{playersResults:r}},{new:!0,upsert:!1}).exec();t.json(n)}),le=[Object(y.param)("tournamentId").custom(e=>Object(g.a)(e,s.a)),Object(y.param)("matchId").custom(e=>Object(g.a)(e<u))],be=Object(I.d)(async(e,t)=>{const{matchId:a}=e.params,r=await u.findById(a).exec();t.json(r)});var je=a(31),ye=a.n(je);const fe=[Object(y.param)("tournamentId").custom(e=>Object(g.a)(e,s.a)),Object(y.param)("matchId").custom(e=>Object(g.a)(e,u)),Object(y.param)("matchId").custom(async(e,{req:t})=>{const{tournamentId:a,matchId:r}=t.params,{matches:n}=await s.a.findById(a).exec();if(!n.includes(r))throw new Error("Match don't exist on this tournament")}),Object(y.body)().not().isEmpty()],he=Object(I.d)(async(e,t)=>{const{matchId:a}=e.params,r=(e=>Object.entries(e).map(([e,t])=>({userId:e,results:Object.entries(t).map(([e,t])=>{})})))(e.body),n=await u.findByIdAndUpdate(a,{$push:{results:{$each:ye()(r,"userId")}}},{new:!0});t.json(n)}),we=[Object(y.param)("matchId").custom(e=>Object(g.a)(e,u)),Object(y.param)("matchId").custom(async e=>{const{isActive:t}=await u.findById(e).exec();if(t)throw new Error("Match is already started");return!0})],Oe=Object(I.d)(async(e,t)=>{const{tournamentId:a,matchId:r}=e.params;await u.update({_id:r},{$set:{isActive:!0,startedAt:Date.now()}}).exec();const n=await s.a.findById(a).populate("creatorId").populate("applicants").populate("matches").populate("creator","_id username summonerName").exec();t.json(n)}),ge=[Object(y.param)("matchId").custom(e=>Object(g.a)(e,u)),Object(y.param)("matchId").custom(async e=>{const{endAt:t}=await u.findById(e).exec();if(t)throw new Error("Match is already ended");return!0})],Ie=Object(I.d)(async(e,t)=>{const{tournamentId:a,matchId:r}=e.params;await u.update({_id:r},{$set:{isActive:!1,endAt:Date.now()}}).exec();const n=await s.a.findById(a).populate("creatorId").populate("applicants").populate("matches").populate("creator","_id username summonerName").exec();t.json(n)}),ve=n.a.Router({mergeParams:!0});var _e=()=>(ve.post("/",re,ne),ve.get("/:matchId",le,be),ve.patch("/:matchId/start",we,Oe),ve.patch("/:matchId/end",ge,Ie),ve.patch("/:matchId",ce,ie),ve.delete("/:matchId",de,ue),ve.post("/:matchId/results",fe,he),ve.put("/:matchId/results",me,pe),ve);let xe=n.a.Router();var Se=e=>(xe.get("/",m),xe.post("/",f,h),xe.get("/:id",Y,L),xe.get("/:id/rewards",F,z),xe.patch("/:id",J,K),xe.patch("/:id/attend",v,_),xe.patch("/:id/applicantStatus",te,ae),xe.patch("/:id/forecastStatus",V,W),xe.patch("/:id/view",x,S),xe.patch("/:id/start",H,Q),xe.patch("/:id/finalize",Z,ee),xe.patch("/:id/rewards",M,P),xe.use("/:tournamentId/matches",_e()),xe),Ee=async(e,t)=>{const{_id:a}=e.decoded,r=e.query.isClaimed;let n;n=r?await D.a.find({userId:a,isClaimed:r}):await D.a.find({userId:a}),t.json({rewards:n})};let Be=n.a.Router();var ke=()=>(Be.get("/reward",Ee),Be),qe=async(e,t)=>{const a=await D.a.find();t.json({rewards:a})};const Ae=[Object(y.param)("userId").custom(e=>Object(g.a)(e,X.a))],Ne=Object(I.d)(async(e,t)=>{try{const a=await D.a.find({userId:e.params.userId});t.status(200).json(a)}catch(e){t.status(500).json({error:e})}}),Ue=[Object(y.check)("key").isString().not().isEmpty().withMessage("Enter key")],Re=Object(I.d)(async(e,t)=>{try{const a=await D.a.create(j()(l()(e.body,["key","description","image"]),{key:"",isClaimed:!1,description:"",image:""}));t.status(200).json({reward:a})}catch(e){t.status(500).json({error:e})}}),$e=[Object(y.body)().custom(e=>Object(g.c)(e,D.a))],Me=Object(I.d)(async(e,t)=>{try{const a=await D.a.findOneAndUpdate({_id:e.params.id},l()(e.body,["key","userId","isClaimed","description","image"]),{new:!0});t.status(200).json(a)}catch(e){t.status(500).json({error:e})}}),Pe=[Object(y.param)("id").custom(e=>Object(g.a)(e,D.a))],Te=Object(I.d)(async(e,t)=>{try{await D.a.remove({_id:e.params.id}),t.json({})}catch(e){t.status(500).json({error:e})}});var Ce=async(e,t)=>{const a=await X.a.find().select("-password");t.json({users:a})},De=async(e,t)=>{const{username:a}=e.params,r=new RegExp("^"+a);if(""===a)return void t.json({users:[]});const n=await X.a.find({username:{$regex:r,$options:"i"}}).select("-password");t.json({users:n})};const Fe=[Object(y.param)("id").custom(e=>Object(g.a)(e,X.a))],ze=Object(I.d)(async(e,t)=>{const{id:a}=e.params,r=await X.a.findById(a).select("-password");t.json(r)}),Le=[Object(y.check)("username").isString().not().isEmpty().withMessage("Username field shouldn't be empty").isLength({min:1,max:20}).withMessage("username should contain more than 1 char and less than 20").custom(e=>Object(g.b)({username:e},X.a)),Object(y.check)("email").isString().not().isEmpty().withMessage("Email field shouldn't be empty").isEmail().withMessage("Invalid email format").isLength({min:5,max:30}).withMessage("Email should contain more than 5 chars and less than 30").custom(e=>Object(g.b)({email:e},X.a)),Object(y.check)("summonerName").custom(e=>Object(g.b)({summonerName:e},X.a)),Object(y.check)("regionId").isIn(G.a).withMessage("Invalid region"),Object(y.check)("role").isIn(["user","admin","streamer"]).withMessage("Invalid user role"),Object(y.check)("preferredPosition").isIn(["adc","mid","top","jungle","supp"]).withMessage("Invalid preffered position")],Ye=Object(I.d)(async(e,t)=>{try{const a=await X.a.create(j()(l()(e.body,["username","email","imageUrl","about","role","summonerName","regionId","preferredPosition"]),{imageUrl:"",about:"",role:"",summonerName:"",regionId:"",preferredPosition:""}));t.status(200).json({user:a})}catch(e){t.status(500).json({error:e})}}),Ge=[Object(y.check)("id").custom(e=>Object(g.a)(e,X.a))],Je=Object(I.d)(async(e,t)=>{try{await X.a.remove({_id:e.params.id}),t.json({})}catch(e){t.status(500).json({error:e})}}),Ke=[Object(y.body)().custom(e=>Object(g.c)(e,X.a))],Ve=Object(I.d)(async(e,t)=>{try{const a=await X.a.findOneAndUpdate({_id:e.params.id},e.body,{new:!0});t.status(200).json(a)}catch(e){t.status(500).json({error:e})}});let We=n.a.Router();var He=()=>(We.get("/reward",qe),We.get("/reward/user/:userId",Ae,Ne),We.post("/reward",Ue,Re),We.patch("/reward/:id",$e,Me),We.delete("/reward/:id",Pe,Te),We.post("/user",Le,Ye),We.get("/user",Ce),We.get("/user/:id",Fe,ze),We.get("/user/name/:username",De),We.delete("/user/:id",Ge,Je),We.patch("/user/:id",Ke,Ve),We),Qe=async(e,t)=>{const a=await X.a.find();t.json(a)};const Xe=[Object(y.check)().custom((e,{req:t})=>Object(g.d)(e,t))],Ze=Object(I.d)(async(e,t)=>{const{_id:a}=e.decoded;try{const e=await X.a.findOne({_id:a}).select("-password");t.status(200).json(e)}catch(e){t.status(500).json({error:e})}}),et=[Object(y.body)().custom((e,{req:t})=>Object(g.d)(e,t)).custom(e=>Object(g.c)(e,X.a))],tt=Object(I.d)(async(e,t)=>{const{_id:a}=e.decoded;try{const r=await X.a.findOneAndUpdate({_id:a},l()(e.body,["username","imageUrl","about","twitchAccount","summonerName","regionId","preferredPosition","contact"]),{new:!0});t.status(200).json(r)}catch(e){t.status(500).json({error:e})}}),at=[Object(y.param)("id").custom((e,t)=>Object(g.a)(e,X.a))],rt=Object(I.d)(async(e,t)=>{const a=e.params.id;try{const e=await X.a.findOne({_id:a}).select("-password");t.status(200).json(e)}catch(e){t.status(500).json({error:e})}});let nt=n.a.Router();var st=()=>(nt.get("/me",Xe,Ze),nt.patch("/me",et,tt),nt.get("/",Qe),nt.get("/:id",at,rt),nt);a.d(t,"c",function(){return Se}),a.d(t,"b",function(){return ke}),a.d(t,"a",function(){return He}),a.d(t,"d",function(){return st})},function(e,t,a){"use strict";t.a=e=>{let t=[];return e.schema.eachPath(e=>t.push(e)),t}},function(e,t,a){"use strict";var r=a(5),n=a.n(r),s=a(17),o=a.n(s),c=a(4);let i=n.a.Router();t.a=e=>(i.post("/oauth",(e=>async(t,a)=>{const{email:r,name:n,photo:s,summonerName:i="",contact:d=""}=t.body;await c.a.findOne({email:r})||await c.a.create({username:n,imageUrl:s,email:r,summonerName:i,contact:d});const u=await c.a.findOne({email:r}),{_id:m,username:p,isAdmin:l}=u;a.json({success:!0,message:"Enjoy your token!",user:u,token:o.a.sign({_id:m,username:p,isAdmin:l},e.get("superSecret"),{expiresIn:86400})})})(e)),i)},function(e,t){e.exports=require("jsonwebtoken")},function(e,t,a){"use strict";var r=a(5),n=a.n(r),s=a(4);let o=n.a.Router();var c=()=>(o.get("/",async(e,t)=>{const a=await s.a.find().select("-isAdmin");t.json({users:a})}),o.get("/:id",async(e,t)=>{const a=e.params.id,r=await s.a.findOne({_id:a});t.json({user:r})}),o),i=a(1),d=async(e,t)=>{const a=await i.a.find({}).populate("winner").populate("creatorId").populate("summoners").populate("applicants").populate("matches").exec();t.json({tournaments:a})},u=a(0);const m=(e=>(t,a)=>{const r=Object(u.validationResult)(t);return r.isEmpty()?e(t,a):a.status(400).json({errors:r.array()})})(async(e,t)=>{const{id:a}=e.params;try{const e=await i.a.findById(a).populate("winner").populate("creatorId").populate("matches").populate("creator","_id username summonerName").exec();t.json(e)}catch(e){t.json({error:e})}}),p=[Object(u.check)("id").isMongoId()];var l=a(9),b=a.n(l),j=a(6),y=a(2),f=a(3);const h=[Object(u.param)("id").custom(e=>Object(y.a)(e,i.a)),Object(u.body)().custom(async(e,{req:t})=>{const{id:a}=t.params,r=await i.a.findById(a).select("rewards");return b()(r),!0})],w=Object(f.d)(async(e,t)=>{const{id:a}=e.params,r=await i.a.findById(a).select("rewards").lean();if(b()(r))return void t.send({rewards:[]});const n=Object.keys(r.rewards),s=await j.a.find({_id:{$in:n}}).select("-key -isClaimed -userId");t.send(s)});let O=n.a.Router();var g=()=>(O.get("/",d),O.get("/:id",p,m),O.get("/:id/rewards",h,w),O),I=a(12),v=a.n(I),_=a(7),x=a.n(_),S=(e,t)=>{const a=t.map(e=>e._id),r=a.reduce((t,a)=>{const r=e.filter(e=>v()(e.summoners,a)).map(e=>x()(e,["rules","summoners","viewers","matches"]));return t[a]=r,t},{}),n=a.reduce((e,t)=>({...e,[t]:0}),{});for(const e of a)r[e].forEach(e=>{const{summoners:t,matches:a,rules:r}=e,s=Object(f.a)(t,a,r);for(const{summoner:e,points:t}of s)n[e]+=t});return Object.entries(n).map(([e,a])=>{const{_id:r,summonerName:n,username:s,imageUrl:o}=t.find(t=>String(t._id)===String(e));return{_id:r,username:s,summonerName:n,imageUrl:o,points:a}}).sort((e,t)=>t.points-e.points)},E=(e,t)=>{const a=t.filter(e=>e.canProvideTournaments),r=a.map(e=>e._id),n=r.reduce((t,a)=>{const r=e.filter(e=>String(e.creator._id)===String(a));return t[a]=r,t},{});return r.reduce((e,t)=>{const{_id:r,summonerName:s,username:o,imageUrl:c}=a.find(e=>String(e._id)===String(t)),i=n[t].reduce((e,t)=>e+=t.viewers.length,0);return e.push({_id:r,imageUrl:c,username:o,summonerName:s,points:i}),e},[]).sort((e,t)=>t.points-e.points)},B=(e,t)=>{const a=t.map(e=>e._id),r=a.reduce((t,a)=>{const r=e.filter(e=>v()(e.viewers,{userId:String(a)})).map(e=>x()(e,["rules","summoners","viewers","matches"]));return t[a]=r,t},{});return a.map(e=>{const{_id:a,summonerName:n,username:s,imageUrl:o}=t.find(t=>String(t._id)===String(e));return r[e].reduce((t,a)=>{const{summoners:r,matches:n,viewers:s,rules:o}=a,c=s.find(t=>String(t.userId)===String(e)),i=Object(f.a)(r,n,o),d=Object(f.b)(c,i);return t.points+=d,t},{_id:a,summonerName:n,imageUrl:o,username:s,points:0})}).sort((e,t)=>t.points-e.points)},k=async(e,t)=>{const a=await i.a.find({isFinalized:!0}).populate("applicants").populate("matches").populate("creator","_id username summonerName").lean(),r=await s.a.find(),n={streamersRating:E(a,r),viewersRating:B(a,r),applicantsRating:S(a,r)};t.json(n)};let q=n.a.Router();var A=()=>(q.get("/",k),q);a.d(t,"c",function(){return c}),a.d(t,"b",function(){return g}),a.d(t,"a",function(){return A})},function(e,t){e.exports=require("lodash/pickBy")},function(e,t){e.exports=require("lodash/negate")},function(e,t){e.exports=require("lodash/isUndefined")},function(e,t){e.exports=require("express-validator/filter")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("body-parser")},function(e,t,a){"use strict";var r=a(32);a.n(r).a.config(),t.a={secret:process.env.SECRET||"sdfmn43lkfvmsd",database:process.env.MONGODB_URI||"mongodb://admin:admin@ds121248.mlab.com:21248/react-app",client_id:process.env.CLIENT_ID,client_secret:process.env.CLIENT_SECRET}},function(e,t,a){"use strict";var r=a(5),n=a.n(r),s=a(17),o=a.n(s);let c=n.a.Router();var i=e=>(c.use((t,a,r)=>{const n=t.body.token||t.query.token||t.headers["x-access-token"];if(!n)return a.status(403).json({success:!1,message:"No token provided."});o.a.verify(n,e.get("superSecret"),(e,n)=>{if(e)return a.json({success:!1,message:"Failed to authenticate token."});t.decoded=n,r()})}),c);a(4);var d=(e,t,a)=>{e.decoded.isAdmin?a():t.send({error:"You are not admin"})};a.d(t,"b",function(){return i}),a.d(t,"a",function(){return d})},function(e,t){e.exports=require("http")},function(e,t){e.exports=require("cookie-parser")},function(e,t){e.exports=require("socket.io")},function(e,t){e.exports=require("lodash/omit")},function(e,t){e.exports=require("lodash/uniqBy")},function(e,t){e.exports=require("dotenv")},function(e,t,a){"use strict";a.r(t),function(e){var t=a(27),r=a.n(t),n=a(23),s=a.n(n),o=a(8),c=a.n(o),i=a(5),d=a.n(i),u=a(28),m=a.n(u),p=a(29),l=a.n(p),b=(a(34),a(24)),j=a.n(b),y=a(14),f=a(16),h=a(18),w=a(26),O=a(25);const g=d()();let I=r.a.Server(g);I.timeout=999999;let v=l()(I);c.a.Promise=Promise,c.a.connect(O.a.database),g.set("superSecret",O.a.secret);const _=process.env.PORT||3001;console.log("PRODUCTION"),g.use(j.a.json()),g.use(j.a.urlencoded({extended:!1})),g.use(m()()),g.use(d.a.static(s.a.join(e,"..","client","build"))),g.use("/authentication",Object(f.a)(g)),g.use("/public/users",Object(h.c)()),g.use("/public/rating",Object(h.a)()),g.use("/public/tournaments",Object(h.b)()),g.use("/api",Object(w.b)(g)),g.use("/api/users",Object(y.d)()),g.use("/api/tournaments",Object(y.c)(v)),g.use("/api/rewards",Object(y.b)()),g.use("/api/admin",w.a,Object(y.a)(v)),g.get("/*",(t,a)=>{a.sendFile(s.a.join(e,"..","client","build","index.html"))}),I.listen(_,()=>console.log(`Listening on port ${_}`))}.call(this,"/")},function(e,t){e.exports=require("morgan")}]);