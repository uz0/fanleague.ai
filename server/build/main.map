{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../common/constants.js","webpack:///./app.js","webpack:///./config.js","webpack:///./controllers/adminController/index.js","webpack:///./controllers/adminController/reward/create.js","webpack:///./controllers/adminController/reward/delete.js","webpack:///./controllers/adminController/reward/get.js","webpack:///./controllers/adminController/reward/getUserRewards.js","webpack:///./controllers/adminController/reward/update.js","webpack:///./controllers/adminController/user/create.js","webpack:///./controllers/adminController/user/delete.js","webpack:///./controllers/adminController/user/get.js","webpack:///./controllers/adminController/user/getUserById.js","webpack:///./controllers/adminController/user/getUserByName.js","webpack:///./controllers/adminController/user/update.js","webpack:///./controllers/authenticationController/constants.js","webpack:///./controllers/authenticationController/index.js","webpack:///./controllers/authenticationController/oauth.js","webpack:///./controllers/helpers/calc-summoners-points.js","webpack:///./controllers/helpers/calc-viewer-points.js","webpack:///./controllers/helpers/calc-viewers-points.js","webpack:///./controllers/helpers/getModelFields.js","webpack:///./controllers/helpers/index.js","webpack:///./controllers/helpers/withValidationHandler.js","webpack:///./controllers/index.js","webpack:///./controllers/public/index.js","webpack:///./controllers/public/ratingController/getApplicantsRating.js","webpack:///./controllers/public/ratingController/getRating.js","webpack:///./controllers/public/ratingController/getStreamersRating.js","webpack:///./controllers/public/ratingController/getViewersRating.js","webpack:///./controllers/public/ratingController/index.js","webpack:///./controllers/public/tournamentController/get.js","webpack:///./controllers/public/tournamentController/getById.js","webpack:///./controllers/public/tournamentController/index.js","webpack:///./controllers/public/tournamentController/rewards/get.js","webpack:///./controllers/public/usersController.js","webpack:///./controllers/rewardController/getUserRewards.js","webpack:///./controllers/rewardController/index.js","webpack:///./controllers/tournamentController/applicantStatus.js","webpack:///./controllers/tournamentController/attend.js","webpack:///./controllers/tournamentController/create.js","webpack:///./controllers/tournamentController/edit.js","webpack:///./controllers/tournamentController/finalize.js","webpack:///./controllers/tournamentController/forecastStatus.js","webpack:///./controllers/tournamentController/get.js","webpack:///./controllers/tournamentController/getById.js","webpack:///./controllers/tournamentController/index.js","webpack:///./controllers/tournamentController/match/create.js","webpack:///./controllers/tournamentController/match/createResults.js","webpack:///./controllers/tournamentController/match/delete.js","webpack:///./controllers/tournamentController/match/edit.js","webpack:///./controllers/tournamentController/match/editResults.js","webpack:///./controllers/tournamentController/match/end.js","webpack:///./controllers/tournamentController/match/get.js","webpack:///./controllers/tournamentController/match/helpers.js","webpack:///./controllers/tournamentController/match/index.js","webpack:///./controllers/tournamentController/match/start.js","webpack:///./controllers/tournamentController/rewards/edit.js","webpack:///./controllers/tournamentController/rewards/get.js","webpack:///./controllers/tournamentController/start.js","webpack:///./controllers/tournamentController/view.js","webpack:///./controllers/usersController/get.js","webpack:///./controllers/usersController/getUserById.js","webpack:///./controllers/usersController/getUserProfile.js","webpack:///./controllers/usersController/index.js","webpack:///./controllers/usersController/updateUserProfile.js","webpack:///./controllers/validators.js","webpack:///./middlewares/adminVerifyMiddleware.js","webpack:///./middlewares/authVerifyMiddleware.js","webpack:///./middlewares/index.js","webpack:///./models/match.js","webpack:///./models/reward.js","webpack:///./models/tournament.js","webpack:///./models/user.js","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"express-validator/check\"","webpack:///external \"express-validator/filter\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"lodash/defaults\"","webpack:///external \"lodash/difference\"","webpack:///external \"lodash/find\"","webpack:///external \"lodash/isEmpty\"","webpack:///external \"lodash/isUndefined\"","webpack:///external \"lodash/negate\"","webpack:///external \"lodash/omit\"","webpack:///external \"lodash/pick\"","webpack:///external \"lodash/pickBy\"","webpack:///external \"lodash/uniqBy\"","webpack:///external \"mongoose\"","webpack:///external \"morgan\"","webpack:///external \"path\"","webpack:///external \"socket.io\""],"names":["REGIONS","RULES","name","range","app","express","server","http","Server","timeout","io","socketIO","mongoose","Promise","connect","config","database","set","secret","port","process","env","PORT","console","use","logger","bodyParser","json","urlencoded","extended","cookieParser","static","path","join","__dirname","AuthenticationController","PublicUsersController","PublicRatingController","PublicTournamentController","AuthVerifyMiddleware","UsersController","TournamentController","RewardController","AdminVerifyMiddleware","AdminController","get","req","res","sendFile","listen","log","dotenv","SECRET","MONGODB_URI","client_id","CLIENT_ID","client_secret","CLIENT_SECRET","router","Router","getRewards","validateGetUserRewards","getUserRewardsHandler","post","validateRewardCreate","createRewardHandler","patch","validateRewardUpdate","updateRewardHandler","delete","validateRewardDelete","deleteRewardHandler","validateUserCreate","createUserHandler","getUsers","validateUserId","getUserById","getUserByName","validateUserDelete","deleteUserHandler","validateUserUpdate","updateUserHandler","validator","check","isString","not","isEmpty","withMessage","handler","withValidationHandler","reward","RewardModel","create","defaults","pick","body","key","isClaimed","description","image","status","error","param","custom","value","isEntityExists","remove","_id","params","id","rewards","find","UserModel","userId","isRequestHasCorrectFields","findOneAndUpdate","new","isLength","min","max","isPropertyValueUnique","username","isEmail","email","summonerName","isIn","user","imageUrl","about","role","regionId","preferredPosition","users","select","findById","regexp","RegExp","$regex","$options","ONE_DAY","oauth","photo","contact","checkUser","findOne","isAdmin","success","message","token","jwt","sign","expiresIn","summoners","matches","rules","length","map","summoner","points","includes","undefined","reduce","item","match","playersResults","result","summonerPoints","Object","entries","results","summonersWithPoints","String","sort","prev","next","viewer","summonersResults","summonersResultsMap","viewers","viewersResults","push","viewerId","model","fields","schema","eachPath","errors","validationResult","array","tournaments","userIds","tournamentsList","list","userTournaments","filter","normalizedTournaments","tournament","resultsMap","forEach","calcSummonersPoints","applicantsRating","summonerId","TournamentModel","isFinalized","populate","lean","rating","streamersRating","getStreamersRating","viewersRating","getViewersRating","getApplicantsRating","streamers","canProvideTournaments","streamersIds","streamer","streamerTournaments","creator","totalViewers","viewersCounter","summonersPoints","viewersPoints","calcViewerPoints","getRating","exec","isMongoId","getById","Tournament","tournamentId","tournamentRewards","send","rewardsIds","keys","Reward","$in","decoded","isClaimedFilter","query","getUserRewards","isUserHasToken","newStatus","newTournament","update","$set","arrayFilters","$push","then","isReady","reject","_","applicants","isAlreadyApplicantOrSummoner","Error","modifiedTournament","findByIdAndUpdate","save","url","createdAt","Date","now","fieldsToExclude","extraField","difference","RULES_NAMES","rule","rulesDiff","sanitizeBody","customSanitizer","values","pickBy","negate","isUndefined","catch","viewersIds","User","calcViewersPoints","topSummonersResults","slice","topViewersResults","placesMap","normalizedRewards","tournamentWinners","rewardId","roleAndPlace","placeId","split","place","winnerId","position","winners","finalizedTournament","isForecastingActive","edit","attend","applicantStatus","forecastStatus","view","start","finalize","editRewards","matchController","matchInfo","newMatch","matchId","rawResults","normaliseResults","$each","uniqBy","matchUpdate","omit","upsert","Match","endAt","isActive","wantedMatch","ruleId","mergeParams","MatchController","validateCreate","validateGet","end","validateEdit","validateDelete","deleteHandler","createResults","put","validateEditResults","editResults","startedAt","isStarted","getUserProfileValidator","getUserProfile","userUpdateValidator","getAllUsers","getUserByIdValidator","getUserByIdHandler","property","entity","isRequestSucces","erorr","requestFields","modelFields","getModelFields","diff","modelName","headers","verify","err","Schema","refTo","schemaName","type","Types","ObjectId","ref","Map","of","Number","Boolean","default","updatedAt","toObject","virtuals","unique","startAt","price","enum","toJSON","virtual","localField","foreignField","required","partialFilterExpression","$type","isVerified","twitchAccount"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const REGIONS = ['BR', 'EUNE', 'EUW', 'JP', 'KR', 'LAN', 'LAS', 'NA', 'OCE', 'TR', 'RU', 'PBE'];\n\nexport const RULES = [{\n  name: 'kills',\n  range: [0, 10],\n}, {\n  name: 'deaths',\n  range: [0, 10],\n}, {\n  name: 'assists',\n  range: [0, 10],\n}];","import http from 'http';\nimport path from 'path';\nimport mongoose from 'mongoose';\nimport express from 'express';\nimport cookieParser from 'cookie-parser';\nimport socketIO from 'socket.io';\nimport logger from 'morgan';\nimport bodyParser from 'body-parser';\n\nimport {\n  UsersController,\n  TournamentController,\n  AdminController,\n  RewardController,\n} from './controllers';\n\nimport AuthenticationController from './controllers/authenticationController';\n\nimport {\n  PublicUsersController,\n  PublicTournamentController,\n  PublicRatingController,\n} from './controllers/public';\n\nimport { AuthVerifyMiddleware, AdminVerifyMiddleware } from './middlewares';\nimport config from './config';\n\nconst app = express();\nlet server = http.Server(app);\nserver.timeout = 999999;\nlet io = socketIO(server);\n\nmongoose.Promise = Promise;\nmongoose.connect(config.database);\napp.set('superSecret', config.secret);\n\nconst port = process.env.PORT || 3001;\n\nif (process.env.NODE_ENV === 'production') console.log('PRODUCTION');\nif (process.env.NODE_ENV === 'development') {\n  app.use(logger('dev'));\n}\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n\napp.use(express.static(path.join(__dirname, '..', 'client', 'build')));\n\napp.use('/authentication', AuthenticationController(app));\n\napp.use('/public/users', PublicUsersController());\napp.use('/public/rating', PublicRatingController());\napp.use('/public/tournaments', PublicTournamentController());\n\napp.use('/api', AuthVerifyMiddleware(app));\napp.use('/api/users', UsersController());\napp.use('/api/tournaments', TournamentController(io));\napp.use('/api/rewards', RewardController());\n\napp.use('/api/admin', AdminVerifyMiddleware, AdminController(io));\n\n// express will serve up index.html if it doesn't recognize the route\napp.get('/*', (req, res) => {\n  res.sendFile(path.join(__dirname, '..', 'client', 'build', 'index.html'));\n});\n\nserver.listen(port, () => console.log(`Listening on port ${port}`));","import dotenv from 'dotenv';\ndotenv.config();\n\nexport default {\n  secret: process.env.SECRET || 'sdfmn43lkfvmsd',\n  database: process.env.MONGODB_URI || 'mongodb://admin:admin@ds121248.mlab.com:21248/react-app',\n  client_id: process.env.CLIENT_ID,\n  client_secret: process.env.CLIENT_SECRET,\n}","import express from 'express';\n\nimport getRewards from './reward/get';\n\nimport {validator as validateGetUserRewards, handler as getUserRewardsHandler} from './reward/getUserRewards';\nimport {validator as validateRewardCreate, handler as createRewardHandler} from './reward/create';\nimport {validator as validateRewardUpdate, handler as updateRewardHandler} from './reward/update';\nimport {validator as validateRewardDelete, handler as deleteRewardHandler} from './reward/delete';\n\nimport getUsers from './user/get';\nimport getUserByName from './user/getUserByName';\nimport {validator as validateUserId, handler as getUserById} from './user/getUserById';\nimport {validator as validateUserCreate, handler as createUserHandler} from './user/create';\nimport {validator as validateUserDelete, handler as deleteUserHandler} from './user/delete';\nimport {validator as validateUserUpdate, handler as updateUserHandler} from './user/update';\n\nlet router = express.Router();\n\nconst AdminController = () => {\n  router.get('/reward', getRewards);\n\n  router.get('/reward/user/:userId', validateGetUserRewards, getUserRewardsHandler);\n\n  router.post('/reward', validateRewardCreate, createRewardHandler);\n\n  router.patch('/reward/:id', validateRewardUpdate, updateRewardHandler);\n\n  router.delete('/reward/:id', validateRewardDelete, deleteRewardHandler);\n\n  router.post('/user', validateUserCreate, createUserHandler);\n\n  router.get('/user', getUsers);\n\n  router.get('/user/:id', validateUserId, getUserById);\n\n  router.get('/user/name/:username', getUserByName);\n\n  router.delete('/user/:id', validateUserDelete, deleteUserHandler);\n\n  router.patch('/user/:id', validateUserUpdate, updateUserHandler);\n\n  return router;\n};\n\nexport default AdminController;","import pick from 'lodash/pick';\nimport defaults from 'lodash/defaults';\nimport { check } from 'express-validator/check';\n\nimport { withValidationHandler } from '../../helpers';\n\nimport RewardModel from '../../../models/reward';\n\nconst validator = [\n  check('key')\n    .isString()\n    .not()\n    .isEmpty()\n    .withMessage('Enter key'),\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  try {\n    const reward = await RewardModel.create(\n      defaults(\n        pick(req.body, [\n          'key',\n          'description',\n          'image',\n        ]),\n        {\n          key: '',\n          isClaimed: false,\n          description: '',\n          image: '',\n        }\n      )\n    );\n\n    res.status(200).json({\n      reward\n    });\n  } catch (error) {\n    res.status(500).json({\n      error\n    });\n  }\n});\n\nexport { validator, handler };","import RewardModel from '../../../models/reward';\nimport { withValidationHandler } from '../../helpers';\n\nimport { isEntityExists } from '../../validators';\n\nimport { param } from 'express-validator/check';\n\nconst validator = [\n  param('id')\n    .custom(value => isEntityExists(value, RewardModel))\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  try {\n    await RewardModel\n      .remove({ _id: req.params.id });\n    res.json({});\n  } catch (error) {\n    res.status(500).json({\n      error\n    });\n  }\n});\n\nexport { validator, handler };","import RewardModel from '../../../models/reward';\n\nexport default async (req, res) => {\n  const rewards = await RewardModel\n    .find();\n  res.json({ rewards });\n}","import RewardModel from '../../../models/reward';\nimport UserModel from '../../../models/user';\n\nimport { param } from 'express-validator/check';\nimport { isEntityExists } from '../../validators';\n\nimport { withValidationHandler } from '../../helpers';\n\nconst validator = [\n  param('userId')\n    .custom(value => isEntityExists(value, UserModel))\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  try {\n    const rewards = await RewardModel.find({ userId: req.params.userId });\n    res.status(200).json(rewards);\n  } catch (error) {\n    res.status(500).json({\n      error\n    });\n  }\n});\n\nexport { validator, handler };","import RewardModel from '../../../models/reward';\n\nimport pick from 'lodash/pick';\n\nimport { body } from 'express-validator/check';\nimport { isRequestHasCorrectFields } from '../../validators';\n\nimport { withValidationHandler } from '../../helpers';\n\nconst validator = [\n  body()\n    .custom(value => isRequestHasCorrectFields(value, RewardModel))\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  try {\n    const reward = await RewardModel.findOneAndUpdate({ _id: req.params.id },\n      pick(req.body, [\n        'key',\n        'userId',\n        'isClaimed',\n        'description',\n        'image',\n      ]),\n      {new: true},\n    );\n\n    res.status(200).json(reward);\n  } catch (error) {\n    res.status(500).json({\n      error\n    });\n  }\n});\n\nexport { validator, handler };","import pick from 'lodash/pick';\nimport defaults from 'lodash/defaults';\nimport { check } from 'express-validator/check';\nimport { withValidationHandler } from '../../helpers';\nimport { isPropertyValueUnique } from '../../validators';\nimport { REGIONS } from '../../../../common/constants';\n\nimport UserModel from '../../../models/user';\n\nconst validator = [\n  check('username')\n    .isString()\n    .not()\n    .isEmpty()\n    .withMessage(\"Username field shouldn't be empty\")\n    .isLength({ min: 1, max: 20 })\n    .withMessage(\"username should contain more than 1 char and less than 20\")\n    .custom(value => isPropertyValueUnique({ username: value }, UserModel)),\n  check('email')\n    .isString()\n    .not()\n    .isEmpty()\n    .withMessage(\"Email field shouldn't be empty\")\n    .isEmail()\n    .withMessage(\"Invalid email format\")\n    .isLength({ min: 5, max: 30 })\n    .withMessage(\"Email should contain more than 5 chars and less than 30\")\n    .custom(value => isPropertyValueUnique({ email: value }, UserModel)),\n    check('summonerName')\n    .custom(value => isPropertyValueUnique({ summonerName: value }, UserModel)),\n  check('regionId')\n    .isIn(REGIONS)\n    .withMessage(\"Invalid region\"),\n  check('role')\n    .isIn(['user', 'admin', 'streamer'])\n    .withMessage(\"Invalid user role\"),\n  check('preferredPosition')\n    .isIn(['adc', 'mid', 'top', 'jungle', 'supp'])\n    .withMessage(\"Invalid preffered position\")\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  try {\n    const user = await UserModel.create(\n      defaults(\n        pick(req.body, [\n          'username',\n          'email',\n          'imageUrl',\n          'about',\n          'role',\n          'summonerName',\n          'regionId',\n          'preferredPosition',\n        ]),\n        {\n          imageUrl: '',\n          about: '',\n          role: '',\n          summonerName: '',\n          regionId: '',\n          preferredPosition: '',\n        }\n      )\n    );\n\n    res.status(200).json({\n      user\n    });\n  } catch (error) {\n    res.status(500).json({\n      error\n    });\n  }\n});\n\nexport { validator, handler };","import UserModel from '../../../models/user';\nimport { isEntityExists } from '../../validators';\nimport { withValidationHandler } from '../../helpers';\n\nimport { check } from 'express-validator/check';\n\nconst validator = [\n  check('id')\n    .custom(value => isEntityExists(value, UserModel))\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  try {\n    await UserModel\n      .remove({ _id: req.params.id });\n    res.json({});\n  } catch (error) {\n    res.status(500).json({\n      error\n    });\n  }\n});\n\nexport { validator, handler };","import UserModel from '../../../models/user';\n\nexport default async (req, res) => {\n  const users = await UserModel\n    .find()\n    .select('-password')\n\n  res.json({\n    users,\n  });\n}","import UserModel from '../../../models/user';\nimport { isEntityExists } from '../../validators';\nimport { withValidationHandler } from '../../helpers';\n\nimport { param } from 'express-validator/check';\n\nconst validator = [\n  param('id')\n    .custom(value => isEntityExists(value, UserModel))\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  const { id } = req.params;\n\n  const user = await UserModel\n    .findById(id)\n    .select('-password')\n\n  res.json(user);\n});\n\nexport { validator, handler };","import UserModel from '../../../models/user';\n\nexport default async (req, res) => {\n  const { username } = req.params;\n  const regexp = new RegExp('^'+ username);\n\n  if(username === ''){\n    res.json({\n      users: [],\n    });\n    \n    return;\n  }\n\n  const users = await UserModel\n    .find({ username: { $regex: regexp, $options: 'i' } })\n    .select('-password')\n\n  res.json({\n    users,\n  });\n}","import { body } from 'express-validator/check';\nimport { isRequestHasCorrectFields } from '../../validators';\nimport { withValidationHandler } from '../../helpers';\n\nimport UserModel from '../../../models/user';\n\nconst validator = [\n  body()\n    .custom(value => isRequestHasCorrectFields(value, UserModel))\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  try {\n    const user = await UserModel.findOneAndUpdate({ _id: req.params.id },\n      req.body,\n      { new: true },\n    );\n\n    res.status(200).json(user);\n  } catch (error) {\n    res.status(500).json({\n      error\n    });\n  }\n});\n\nexport { validator, handler };","export const ONE_DAY = 60 * 60 * 24;","import express from 'express';\n\nimport oauth from './oauth';\n\nlet router = express.Router();\n\nconst AuthenticationController = (app) => {\n  router.post('/oauth', oauth(app));\n\n  return router;\n};\n\nexport default AuthenticationController;\n","import jwt from \"jsonwebtoken\";\n\nimport UserModel from \"../../models/user\";\n\nimport { ONE_DAY } from './constants'\n\nexport default (app) => async (req, res) => {\n  const { email, name, photo, summonerName = '', contact = '', } = req.body;\n  const checkUser = await UserModel.findOne({ email });\n\n  if (!checkUser) {\n    await UserModel.create({\n      username: name,\n      imageUrl: photo,\n      email,\n      summonerName,\n      contact\n    });\n  }\n\n  const user = await UserModel.findOne({ email });\n\n  const { _id, username, isAdmin } = user;\n\n  res.json({\n    success: true,\n    message: 'Enjoy your token!',\n    user,\n    token: jwt.sign({\n      _id,\n      username,\n      isAdmin,\n    }, app.get('superSecret'), {\n        expiresIn: ONE_DAY\n      })\n  });\n}","export default (summoners, matches = [], rules = {}) => {\n  if (matches.length === 0) {\n    return summoners.map(summoner => ({ ...summoner, points: 0 }));\n  }\n\n  if (summoners.includes(undefined)) {\n    return;\n  }\n\n  const points = summoners.reduce((points, item) => ({ ...points, [item._id]: 0 }), {});\n\n  for (const match of matches) {\n    if (match.playersResults.length === 0) {\n      continue;\n    }\n\n    for (const result of match.playersResults) {\n      const summonerPoints = Object.entries(result.results).reduce((points, [key, value]) => {\n        points += rules[key] * value;\n        return points;\n      }, 0);\n\n      points[result.userId] += summonerPoints;\n    }\n  }\n\n  const summonersWithPoints = summoners\n    .map(summoner => ({ summoner: String(summoner), points: points[summoner._id] }))\n    .sort((prev, next) => next.points - prev.points);\n\n  return summonersWithPoints;\n};\n","export default (viewer, summonersResults = []) => {\n  const summonersResultsMap = summonersResults\n    .reduce((map, result) => ({ ...map, [result.summoner]: result.points }), {});\n\n  return viewer.summoners.reduce((result, summoner) => result += summonersResultsMap[summoner], 0);;\n};","export default (viewers, summonersResults = []) => {\n  const summonersResultsMap = summonersResults\n    .reduce((map, result) => ({ ...map, [result.summoner]: result.points }), {});\n\n  const viewersResults = viewers.reduce((results, viewer) => {\n    const result = viewer.summoners.reduce((result, summoner) => result += summonersResultsMap[summoner], 0);\n\n    results.push({\n      viewerId: viewer.userId,\n      points: result,\n    });\n\n    return results;\n  }, [])\n    .sort((prev, next) => next.points - prev.points);\n\n  return viewersResults;\n};","export default model => {\n  let fields = [];\n  model.schema.eachPath(path => fields.push(path));\n  return fields;\n}","import withValidationHandler from './withValidationHandler';\nimport calcSummonersPoints from './calc-summoners-points';\nimport calcViewerPoints from './calc-viewer-points';\nimport calcViewersPoints from './calc-viewers-points';\nimport getModelFields from './getModelFields';\n\nexport {\n  calcSummonersPoints,\n  calcViewerPoints,\n  calcViewersPoints,\n  withValidationHandler,\n  getModelFields\n}","import { validationResult } from 'express-validator/check';\n\nexport default handler => (req, res) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array() });\n  }\n  return handler(req, res);\n};","export { default as AuthenticationController } from \"./authenticationController\";\nexport { default as TournamentController } from \"./tournamentController\";\nexport { default as RewardController } from \"./rewardController\";\nexport { default as AdminController } from \"./adminController/index\";\nexport { default as UsersController } from \"./usersController/index\";","import PublicUsersController from \"./usersController\";\nimport PublicTournamentController from \"./tournamentController\";\nimport PublicRatingController from \"./ratingController\";\n\nexport {\n  PublicUsersController,\n  PublicTournamentController,\n  PublicRatingController,\n};","import find from 'lodash/find';\nimport pick from 'lodash/pick';\nimport {\n  calcSummonersPoints,\n} from '../../helpers';\n\nexport default (tournaments, users) => {\n  const userIds = users.map(user => user._id);\n\n  const tournamentsList = userIds.reduce((list, user) => {\n    const userTournaments = tournaments.filter(item => find(item.summoners, user));\n    const normalizedTournaments = userTournaments.map(tournament => pick(tournament, ['rules', 'summoners', 'viewers', 'matches']));\n\n    list[user] = normalizedTournaments;\n    return list;\n  }, {});\n\n  const resultsMap = userIds.reduce((results, userId) => ({...results, [userId]: 0}), {});\n\n  for(const user of userIds) {\n    tournamentsList[user].forEach(tournament => {\n      const { summoners, matches, rules } = tournament;\n  \n      const summonersResults = calcSummonersPoints(summoners, matches, rules);\n  \n      for(const { summoner, points } of summonersResults) {\n        resultsMap[summoner] += points;\n      }\n    });\n  }\n\n  const applicantsRating = Object.entries(resultsMap).map(([summonerId, points]) => {\n    const { _id, summonerName, username, imageUrl } = users.find(item => String(item._id) === String(summonerId));\n\n    return {\n      _id,\n      username,\n      summonerName,\n      imageUrl,\n      points,\n    }\n  })\n  .sort((prev, next) => next.points - prev.points);\n\n  return applicantsRating;\n};","import TournamentModel from '../../../models/tournament';\nimport UserModel from '../../../models/user';\n\nimport getApplicantsRating from './getApplicantsRating';\nimport getStreamersRating from './getStreamersRating';\nimport getViewersRating from './getViewersRating';\n\nexport default async (req, res) => {\n  const tournaments = await TournamentModel\n    .find({ isFinalized: true })\n    .populate('applicants')\n    .populate('matches')\n    .populate('creator', '_id username summonerName')\n    .lean()\n  \n  const users = await UserModel.find();\n\n  const rating = {\n    streamersRating: getStreamersRating(tournaments, users),\n    viewersRating: getViewersRating(tournaments, users),\n    applicantsRating: getApplicantsRating(tournaments, users),\n  }\n\n  res.json(rating);\n}","export default (tournaments, users) => {\n  const streamers = users.filter(user => user.canProvideTournaments);\n  const streamersIds = streamers.map(streamer => streamer._id);\n\n  const tournamentsList = streamersIds.reduce((list, streamer) => {\n    const streamerTournaments = tournaments.filter(item => {\n      return String(item.creator._id) === String(streamer);\n    });\n    list[streamer] = streamerTournaments;\n\n    return list;\n  },{});\n\n  const rating = streamersIds.reduce((rating, streamer) => {\n    const { _id, summonerName, username, imageUrl } = streamers.find(item => String(item._id) === String(streamer));\n\n    const totalViewers = tournamentsList[streamer].reduce((viewersCounter, tournament) => {\n      viewersCounter += tournament.viewers.length;\n      return viewersCounter;\n    }, 0);\n\n    rating.push({\n      _id,\n      imageUrl,\n      username,\n      summonerName,\n      points: totalViewers,\n    });\n\n    return rating;\n  }, [])\n  .sort((prev, next) => next.points - prev.points);\n\n  return rating;\n};","import find from 'lodash/find';\nimport pick from 'lodash/pick';\nimport {\n  calcSummonersPoints,\n  calcViewerPoints,\n} from '../../helpers';\n\nexport default (tournaments, users) => {\n  const userIds = users.map(user => user._id);\n\n  const tournamentsList = userIds.reduce((list, user) => {\n    const userTournaments = tournaments.filter(item => find(item.viewers, { userId: String(user) }));\n    const normalizedTournaments = userTournaments.map(tournament => pick(tournament, ['rules', 'summoners', 'viewers', 'matches']));\n\n    list[user] = normalizedTournaments;\n    return list;\n  }, {});\n\n  const rating = userIds.map(user => {\n    const { _id, summonerName, username, imageUrl } = users.find(item => String(item._id) === String(user));\n\n    const rating = tournamentsList[user].reduce((points, tournament) => {\n      const { summoners, matches, viewers, rules } = tournament;\n      const viewer = viewers.find(item => String(item.userId) === String(user));\n\n      const summonersPoints = calcSummonersPoints(summoners, matches, rules);\n      const viewersPoints = calcViewerPoints(viewer, summonersPoints);\n\n      points.points += viewersPoints;\n\n      return points;\n    }, {\n        _id,\n        summonerName,\n        imageUrl,\n        username,\n        points: 0\n      });\n\n    return rating;\n  })\n  .sort((prev, next) => next.points - prev.points);\n\n  return rating;\n};","import express from 'express';\nimport getRating from './getRating';\n\nlet router = express.Router();\n\nconst PublicRatingController = () => {\n  router.get('/', getRating);\n\n  return router;\n};\n\nexport default PublicRatingController;","import TournamentModel from '../../../models/tournament';\n\nexport default async (req, res) => {\n  const tournaments = await TournamentModel\n    .find({})\n    .populate('winner')\n    .populate('creatorId')\n    .populate('summoners')\n    .populate('applicants')\n    .populate('matches')\n    .exec();\n\n  res.json({ tournaments });\n}","import { check, validationResult } from 'express-validator/check';\nimport TournamentModel from '../../../models/tournament';\n\nconst withValidationHandler = handler => (req, res) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array() });\n  }\n  return handler(req, res);\n};\n\nexport const handler = withValidationHandler(async (req, res) => {\n  const { id } = req.params;\n  try {\n    const tournament = await TournamentModel\n      .findById(id)\n      .populate('winner')\n      .populate('creatorId')\n      .populate('matches')\n      .populate('creator', '_id username summonerName')\n      .exec();\n    res.json(tournament);\n\n  } catch (error) {\n    res.json({ error })\n  }\n\n})\n\nexport const validator = [\n  check('id').isMongoId()\n]","import express from 'express';\n\nimport get from './get';\nimport * as getById from './getById';\nimport * as getRewards from './rewards/get';\n\nlet router = express.Router();\n\nconst PublicTournamentController = () => {\n  router.get('/', get);\n\n  router.get('/:id', getById.validator, getById.handler);\n\n  router.get('/:id/rewards', getRewards.validator, getRewards.handler);\n\n  return router;\n};\n\nexport default PublicTournamentController;\n","import isEmpty from 'lodash/isEmpty';\nimport Tournament from '../../../../models/tournament';\nimport Reward from '../../../../models/reward';\n\nimport { param, body } from 'express-validator/check';\n\nimport {\n  isEntityExists\n} from '../../../validators';\n\nimport { withValidationHandler } from '../../../helpers';\n\nconst validator = [\n  param('id').custom(id => isEntityExists(id, Tournament)),\n  body().custom(async (tournamentId, { req }) => {\n    const { id } = req.params;\n    const tournamentRewards = await Tournament.findById(id).select('rewards');\n\n    if (isEmpty(tournamentRewards)) {\n      return true;\n    }\n\n    return true;\n  }),\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  const { id } = req.params;\n\n  const tournamentRewards = await Tournament\n    .findById(id)\n    .select('rewards')\n    .lean();\n\n  if (isEmpty(tournamentRewards)) {\n    res.send({\n      rewards: []\n    });\n\n    return;\n  }\n\n  const rewardsIds = Object.keys(tournamentRewards.rewards);\n\n  const rewards = await Reward\n    .find({ _id: { $in: rewardsIds } })\n    .select('-key -isClaimed -userId');\n\n  res.send(rewards);\n});\n\nexport { handler, validator };\n","import express from \"express\";\nimport UserModel from \"../../models/user\";\n\nlet router = express.Router();\n\nconst PublicUsersController = () => {\n  router.get('/', async (req, res) => {\n    const users = await UserModel.find().select('-isAdmin');\n\n    res.json({\n      users,\n    });\n  });\n\n  router.get('/:id', async (req, res) => {\n    const id = req.params.id;\n    const user = await UserModel.findOne({ _id: id });\n\n    res.json({ user });\n  });\n\n  return router;\n}\n\nexport default PublicUsersController;","import RewardModel from '../../models/reward';\n\nexport default async (req, res) => {\n  const { _id } = req.decoded;\n  const isClaimedFilter = req.query.isClaimed;\n\n  let rewards;\n\n  if(isClaimedFilter){\n    rewards = await RewardModel.find({ userId: _id, isClaimed: isClaimedFilter });\n  } else {\n    rewards = await RewardModel.find({ userId: _id });\n  }\n\n  res.json({ rewards });\n}","import express from 'express';\n\nimport getUserRewards from './getUserRewards';\n\nlet router = express.Router();\n\nconst RewardController = () => {\n  router.get('/reward', getUserRewards);\n\n  return router;\n};\n\nexport default RewardController;","import { param, check, body } from 'express-validator/check';\n\nimport Tournament from '../../models/tournament';\n\nimport { isEntityExists, isUserHasToken } from '../validators';\nimport { withValidationHandler } from '../helpers';\n\nconst validator = [\n  check().custom((value, { req }) => isUserHasToken(value, req)),\n  param('id').custom(id => isEntityExists(id, Tournament)),\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  const { id } = req.params;\n  const { userId, newStatus } = req.body;\n\n  try {\n    const newTournament = await Tournament\n      .update(\n        { _id: id },\n        { $set: { [`applicants.$[element].status`]: newStatus } },\n        { arrayFilters: [{ 'element.user': userId }] },\n      )\n      .exec();\n\n    if (newStatus === 'ACCEPTED') {\n      await Tournament\n        .update(\n          { _id: id },\n          { $push: { summoners: userId } },\n        )\n        .exec();\n    }\n\n    res.send(newTournament);\n  } catch (error) {\n    console.log(error);\n    res.status(400).send({})\n  }\n});\n\nexport { validator, handler };","import { param, check } from 'express-validator/check';\n\nimport find from 'lodash/find';\n\nimport Tournament from '../../models/tournament';\nimport { isEntityExists } from '../validators';\nimport { withValidationHandler } from '../helpers';\n\nexport const validator = [\n  param('id').custom(id => isEntityExists(id, Tournament)),\n  param('id').custom(id =>\n    Tournament.findById(id)\n      .exec()\n      .then(\n        ({ isReady }) =>\n          !isReady || Promise.reject(\"Can't attend ready tournament\")\n      )\n  ),\n  check('userId')\n    .custom(async (_, { req }) => {\n      const { _id: userId } = req.decoded;\n      const { id } = req.params;\n      const { applicants, summoners } = await Tournament.findById(id).exec();\n\n      const isAlreadyApplicantOrSummoner = summoners.includes(userId) || find(applicants, { user: userId });\n\n      if (isAlreadyApplicantOrSummoner) {\n        throw new Error('User already an applicant or summoner');\n      }\n\n      return true;\n    })\n];\n\nexport const handler = withValidationHandler(async (req, res) => {\n  const { id } = req.params;\n  const { _id: userId } = req.decoded;\n\n    const modifiedTournament = await Tournament.findByIdAndUpdate(id, {\n      $push: { applicants: { user: userId } }\n    });\n\n  await modifiedTournament.save();\n\n  res.json({});\n});\n","import pick from 'lodash/pick';\nimport defaults from 'lodash/defaults';\nimport { check, validationResult } from 'express-validator/check';\n\nimport TournamentModel from '../../models/tournament';\n\nconst validator = [\n  check('name')\n    .isString()\n    .not()\n    .isEmpty()\n    .withMessage('Enter name'),\n  check('price')\n    .not()\n    .isEmpty()\n    .withMessage('Enter entry price'),\n  check('startAt')\n    .not()\n    .isEmpty()\n    .withMessage('Choose start date')\n];\n\nconst withValidationHandler = handler => (req, res) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array() });\n  }\n  return handler(req, res);\n};\n\nconst handler = withValidationHandler(async (req, res) => {\n  try {\n    const newTournament = await TournamentModel.create(\n      defaults(\n        pick(req.body, [\n          'name',\n          'description',\n          'startAt',\n          'price',\n          'url',\n          'imageUrl',\n        ]),\n        {\n          isReady: false,\n          url: '',\n          description: '',\n          imageUrl: '',\n          summoners: [],\n          rewards: [],\n          createdAt: Date.now(),\n          creator: req.decoded._id\n        }\n      )\n    );\n\n    res.status(200).json({\n      newTournament\n    });\n  } catch (error) {\n    res.status(500).json({\n      error\n    });\n  }\n});\n\nexport { validator, handler };\n","import pick from 'lodash/pick';\nimport pickBy from 'lodash/pickBy';\nimport negate from 'lodash/negate';\nimport difference from 'lodash/difference'\nimport isUndefined from 'lodash/isUndefined';\n\nimport { RULES } from '../../../common/constants';\n\nimport { param, body, check } from 'express-validator/check';\nimport { sanitizeBody } from 'express-validator/filter';\n\nimport Tournament from '../../models/tournament';\n\nimport {\n  isRequestHasCorrectFields,\n  isUserHasToken,\n  isEntityExists\n} from '../validators';\n\nimport { withValidationHandler } from '../helpers';\n\nconst validator = [\n  check().custom((value, { req }) => isUserHasToken(value, req)),\n  param('id')\n    .custom(id => isEntityExists(id, Tournament))\n    .custom(async (tournamentId, { req }) => {\n      const { _id } = req.decoded;\n\n      const { creator, isReady } = await Tournament.findById(tournamentId);\n\n      if (String(creator) !== String(_id)) {\n        throw new Error('You are not allowed to edit this tournament');\n      }\n\n      if (isReady) {\n        const fieldsToExclude = ['name', 'description', 'url', 'imageUrl', 'summoners', 'rules'];\n        const extraField = difference(Object.keys(req.body),fieldsToExclude)\n        \n        if(!extraField.length) throw new Error(`You can\\'t edit next fields in ready tournament: ${extraField.join(', ')}`)\n      }\n\n      return true;\n    }),\n  body().custom(body => isRequestHasCorrectFields(body, Tournament)),\n  body().custom(({ summoners }) => {\n    if(!summoners){\n      return true;\n    }\n\n    if(summoners.length > 10){\n      throw new Error('You can\\'t add more than 10 summoners');\n    }\n\n    return true;\n  }),\n  body().custom(({ rules }) => {\n    if(!rules){\n      return true;\n    }\n\n    const RULES_NAMES = RULES.map(rule => rule.name);\n    const rulesDiff = difference(Object.keys(rules), RULES_NAMES);\n\n    if(rulesDiff.length > 0){\n      throw new Error(`Rules object can\\'t contain fields: ${rulesDiff.join(' ')}`);\n    }\n\n    return true;\n  }),\n  sanitizeBody().customSanitizer(values => pickBy(values, negate(isUndefined)))\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  const { id } = req.params;\n\n  Tournament.findByIdAndUpdate(\n    id,\n    {\n      $set: pick(req.body, [\n        'name',\n        'description',\n        'url',\n        'price',\n        'rules',\n        'summoners'\n      ])\n    },\n    {\n      new: true\n    }\n  )\n    .exec()\n    .then(res.json)\n    .catch(error => res.json({ error }));\n});\n\nexport { validator, handler };\n","import { param } from 'express-validator/check';\n\nimport User from '../../models/user';\nimport Reward from '../../models/reward';\nimport Tournament from '../../models/tournament';\nimport { isEntityExists } from '../validators';\nimport {\n  withValidationHandler,\n  calcSummonersPoints,\n  calcViewersPoints,\n} from '../helpers';\n\nexport const validator = [\n  param('id').custom(id => isEntityExists(id, Tournament)),\n  param('id').custom(async id => {\n    const { isFinalized } = await Tournament.findById(id);\n\n    if (isFinalized) throw new Error('Tournament is already finalized');\n\n    return true;\n  })\n];\n\nexport const handler = withValidationHandler(async (req, res) => {\n  const { id } = req.params;\n\n  const tournament = await Tournament\n    .findById(id)\n    .populate('matches')\n    .lean();\n\n  const {\n    rules,\n    matches,\n    summoners,\n    rewards,\n    viewers,\n  } = tournament;\n\n  const viewersIds = tournament.viewers.map(item => String(item.userId));\n\n  const users = await User\n    .find({ _id: { $in: [...viewersIds, ...summoners] }})\n    .select('_id summonerName');\n\n  const summonersResults = calcSummonersPoints(summoners, matches, rules);\n  const viewersResults = calcViewersPoints(viewers, summonersResults);\n\n  const topSummonersResults = summonersResults.slice(0, 3);\n  const topViewersResults = viewersResults.slice(0, 3);\n\n  const placesMap = {\n    'first': 1,\n    'second': 2,\n    'third': 3,\n  };\n\n  const normalizedRewards = Object.entries(rewards);\n  const tournamentWinners = [];\n\n  for(const [ rewardId, roleAndPlace ] of normalizedRewards){\n    const [ role, placeId ] = roleAndPlace.split('_');\n    const place = placesMap[placeId];\n\n    const winnerId = role === 'summoner'\n      ? topSummonersResults[place - 1].summoner\n      : topViewersResults[place - 1].viewerId;\n\n    await Reward.findByIdAndUpdate(rewardId, { $set: { userId: winnerId } });\n\n    tournamentWinners.push({\n      id: winnerId,\n      position: role,\n      place,\n    });\n  }\n\n  await Tournament.findByIdAndUpdate(id, { $set: { winners: tournamentWinners, isFinalized: true } });\n\n  const finalizedTournament = await Tournament\n    .findById(id)\n    .populate('creatorId')\n    .populate('applicants')\n    .populate('matches')\n    .populate('creator', '_id username summonerName')\n    .exec();\n\n  res.send(finalizedTournament);\n});","import { param } from 'express-validator/check';\n\nimport Tournament from '../../models/tournament';\n\nimport { isEntityExists } from '../validators';\nimport { withValidationHandler } from '../helpers';\n\nexport const validator = [\n  param('id').custom(id => isEntityExists(id, Tournament)),\n  param('id').custom(async id => {\n    const { isForecastingActive } = await Tournament.findById(id).exec();\n\n    if (isForecastingActive) throw new Error('Forecasting is already avalilable');\n\n    return true;\n  })\n];\n\nexport const handler = withValidationHandler(async (req, res) => {\n  const { id } = req.params;\n\n  await Tournament.update(\n    { _id: id },\n    { $set: { isForecastingActive: true } },\n    { new: true }\n  ).exec();\n\n  const modifiedTournament = await Tournament\n    .findById(id)\n    .populate('winner')\n    .populate('creatorId')\n    .populate('applicants')\n    .populate('matches')\n    .populate('creator', '_id username summonerName')\n    .exec();\n\n  res.json(modifiedTournament);\n});\n","import TournamentModel from '../../models/tournament';\nimport MatchModel from '../../models/match';\n\nexport default async (req, res) => {\n    const tournaments = await TournamentModel\n      .find({})\n      .populate('winner')\n      .populate('creatorId')\n      .populate('summoners')\n      .populate('applicants')\n      .populate('matches')\n      .exec();\n    \n    res.json({ tournaments });\n}","import { check, validationResult } from 'express-validator/check';\nimport TournamentModel from '../../models/tournament';\n\nconst withValidationHandler = handler => (req, res) => {\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({ errors: errors.array() });\n    }\n    return handler(req, res);\n  };\n\nexport const handler = withValidationHandler(async (req, res) => {\n    const { id } = req.params;\n    try {\n        const tournament = await TournamentModel\n        .findById(id)\n        .populate('winner')\n        .populate('creatorId')\n        .populate('applicants')\n        .populate('matches')\n        .populate('creator', '_id username summonerName')\n        .exec();\n        res.json(tournament);\n        \n    } catch (error) {\n        res.json({error})\n    }\n    \n})\n\nexport const validator = [\n    check('id').isMongoId()\n]","import express from 'express';\n\nimport get from './get';\nimport * as create from './create';\nimport * as attend from './attend';\nimport * as view from './view';\nimport * as editRewards from './rewards/edit';\nimport * as getRewards from './rewards/get';\nimport * as getById from './getById';\nimport * as edit from './edit';\nimport * as forecastStatus from './forecastStatus';\nimport * as start from './start';\nimport * as finalize from './finalize';\nimport * as applicantStatus from './applicantStatus';\n\nimport matchController from './match';\n\nlet router = express.Router();\n\nconst TournamentController = io => {\n  router.get('/', get);\n\n  router.post('/', create.validator, create.handler);\n\n  router.get('/:id', getById.validator, getById.handler);\n\n  router.get('/:id/rewards', getRewards.validator, getRewards.handler);\n\n  router.patch('/:id', edit.validator, edit.handler);\n\n  router.patch('/:id/attend', attend.validator, attend.handler);\n\n  router.patch('/:id/applicantStatus', applicantStatus.validator, applicantStatus.handler);\n\n  router.patch('/:id/forecastStatus', forecastStatus.validator, forecastStatus.handler);\n\n  router.patch('/:id/view', view.validator, view.handler);\n\n  router.patch('/:id/start', start.validator, start.handler);\n\n  router.patch('/:id/finalize', finalize.validator, finalize.handler);\n\n  router.patch('/:id/rewards', editRewards.validator, editRewards.handler);\n\n  router.use('/:tournamentId/matches', matchController());\n\n  return router;\n};\n\nexport default TournamentController;\n","import { param, body } from 'express-validator/check';\n\nimport tournament from '../../../models/tournament';\nimport match from '../../../models/match';\n\nimport { isEntityExists, isRequestHasCorrectFields } from '../../validators';\nimport { withValidationHandler } from '../../helpers';\n\nexport const validator = [\n    param('tournamentId').custom(id => isEntityExists(id, tournament)),\n    body().not().isEmpty(),\n    body().custom(values => isRequestHasCorrectFields(values, match))\n];\n\nexport const handler = withValidationHandler(async (req, res) => {\n    const { tournamentId } = req.params;\n    const matchInfo = req.body;\n\n    const newMatch = await match.create(matchInfo);\n    await tournament.findByIdAndUpdate(tournamentId, { $push: { matches: newMatch._id } }).exec();\n\n    res.json(newMatch)\n});\n","import { param, body } from 'express-validator/check';\nimport uniqBy from 'lodash/uniqBy';\n\nimport tournament from '../../../models/tournament';\nimport match from '../../../models/match';\n\nimport { isEntityExists } from '../../validators';\nimport { withValidationHandler } from '../../helpers';\n\nimport { normaliseResults } from './helpers';\n\nexport const validator = [\n  param('tournamentId').custom(id => isEntityExists(id, tournament)),\n  param('matchId').custom(id => isEntityExists(id, match)),\n  param('matchId').custom(async (_, { req }) => {\n    const { tournamentId, matchId } = req.params;\n    const { matches } = await tournament.findById(tournamentId).exec();\n\n    if (!matches.includes(matchId)) throw new Error(\"Match don't exist on this tournament\");\n  }),\n  body()\n    .not()\n    .isEmpty()\n];\n\nexport const handler = withValidationHandler(async (req, res) => {\n  const { matchId } = req.params;\n  const rawResults = req.body;\n\n  const results = normaliseResults(rawResults)\n\n  const newMatch = await match.findByIdAndUpdate(\n    matchId,\n    {\n      $push: {\n        results: {\n          $each: uniqBy(results, 'userId')\n        }\n      }\n    },\n    { new: true }\n  );\n\n  res.json(newMatch);\n});\n\n","import { param } from 'express-validator/check';\n\nimport TournamentModel from '../../../models/tournament';\nimport match from '../../../models/match';\n\nimport { isEntityExists } from '../../validators';\nimport { withValidationHandler } from '../../helpers';\n\nexport const validator = [\n  param('tournamentId').custom(id => isEntityExists(id, TournamentModel)),\n  param('matchId').custom(id => isEntityExists(id, match)),\n  param().custom(async (_, { req }) => {\n    const { tournamentId, matchId } = req.params;\n    const { matches } = await TournamentModel.findById(tournamentId).populate('matches').exec();\n\n    if (!matches.find(match => String(match._id) === String(matchId))) throw new Error(\"Match don't exist on this tournament\");\n  }),\n];\n\nexport const handler = withValidationHandler(async (req, res) => {\n  const { matchId } = req.params;\n\n  await match.remove({ _id: matchId });\n\n  res.json({});\n});\n","import { param, body } from 'express-validator/check';\nimport omit from 'lodash/omit';\n\nimport tournament from '../../../models/tournament';\nimport match from '../../../models/match';\n\nimport { isEntityExists, isRequestHasCorrectFields } from '../../validators';\nimport { withValidationHandler } from '../../helpers';\n\nexport const validator = [\n  param('tournamentId').custom(id => isEntityExists(id, tournament)),\n  param('matchId').custom(id => isEntityExists(id, match)),\n  param().custom(async (_, { req }) => {\n    const { tournamentId, matchId } = req.params;\n    const { matches } = await tournament.findById(tournamentId).exec();\n\n    if (!matches.includes(matchId)) throw new Error(\"Match don't exist on this tournament\");\n  }),\n  body()\n    .not()\n    .isEmpty(),\n  body().custom(values => isRequestHasCorrectFields(values, match))\n];\n\nexport const handler = withValidationHandler(async (req, res) => {\n  const { matchId } = req.params;\n  const matchUpdate = req.body;\n\n  const newMatch = await match.findByIdAndUpdate(matchId, { $set: omit(matchUpdate, ['_id']) });\n\n  res.json(newMatch);\n});\n","import { param, body } from 'express-validator/check';\n\nimport tournament from '../../../models/tournament';\nimport match from '../../../models/match';\n\nimport { isEntityExists } from '../../validators';\nimport { withValidationHandler } from '../../helpers';\n\nexport const validator = [\n  param('tournamentId').custom(id => isEntityExists(id, tournament)),\n  param('matchId').custom(id => isEntityExists(id, match)),\n  body()\n    .not()\n    .isEmpty()\n];\n\nexport const handler = withValidationHandler(async (req, res) => {\n  const { matchId } = req.params;\n  const results = req.body;\n\n  const newMatch = await match\n    .findByIdAndUpdate(matchId, { $set: { playersResults: results }}, { new: true, upsert: false })\n    .exec();\n\n  res.json(newMatch);\n});","import { param } from 'express-validator/check';\n\nimport Match from '../../../models/match';\nimport Tournament from '../../../models/tournament';\n\nimport { isEntityExists } from '../../validators';\nimport { withValidationHandler } from '../../helpers';\n\nexport const validator = [\n  param('matchId').custom(matchId => isEntityExists(matchId, Match)),\n  param('matchId').custom(async matchId => {\n    const { endAt } = await Match.findById(matchId).exec();\n\n    if (endAt) throw new Error('Match is already ended');\n\n    return true;\n  })\n];\n\nexport const handler = withValidationHandler(async (req, res) => {\n  const { tournamentId, matchId } = req.params;\n\n  await Match.update(\n    { _id: matchId },\n    { $set: { isActive: false, endAt: Date.now() } },\n  ).exec();\n\n  const modifiedTournament = await Tournament\n    .findById(tournamentId)\n    .populate('creatorId')\n    .populate('applicants')\n    .populate('matches')\n    .populate('creator', '_id username summonerName')\n    .exec();\n\n  res.json(modifiedTournament);\n});\n","import { withValidationHandler } from \"../../helpers\";\nimport { param } from \"express-validator/check\";\nimport { isEntityExists } from \"../../validators\";\nimport tournament from \"../../../models/tournament\";\nimport match from \"../../../models/match\";\n\nexport const validator = [\n    param('tournamentId').custom(id => isEntityExists(id, tournament)),\n    param('matchId').custom(id => isEntityExists(id< match))\n]\n\nexport const handler = withValidationHandler(async (req,res) => {\n    const { matchId } = req.params;\n\n    const wantedMatch = await match.findById(matchId).exec()\n\n    res.json(wantedMatch)\n})\n","export const normaliseResults = rawResults => Object.entries(rawResults).map(([userId, results]) => ({\n    userId,\n    results: Object.entries(results).map(([ruleId, value]) => {\n      ruleId, value;\n    })\n  }));","import express from 'express';\n\nimport { validator as validateCreate, handler as create } from './create';\nimport { validator as validateEdit, handler as edit } from './edit';\nimport { validator as validateDelete, handler as deleteHandler } from './delete';\nimport { validator as validateEditResults, handler as editResults } from './editResults';\nimport { validator as validateGet, handler as get } from './get';\nimport * as createResults from './createResults';\nimport * as start from './start';\nimport * as end from './end';\n\nconst router = express.Router({\n  mergeParams: true\n});\n\nconst MatchController = () => {\n  router.post('/', validateCreate, create);\n\n  router.get('/:matchId', validateGet, get);\n\n  router.patch('/:matchId/start', start.validator, start.handler);\n\n  router.patch('/:matchId/end', end.validator, end.handler);\n\n  router.patch('/:matchId', validateEdit, edit);\n\n  router.delete('/:matchId', validateDelete, deleteHandler);\n\n  router.post('/:matchId/results', createResults.validator, createResults.handler);\n\n  router.put('/:matchId/results', validateEditResults, editResults);\n\n  return router;\n}\n\nexport default MatchController;","import { param } from 'express-validator/check';\n\nimport Match from '../../../models/match';\nimport Tournament from '../../../models/tournament';\n\nimport { isEntityExists } from '../../validators';\nimport { withValidationHandler } from '../../helpers';\n\nexport const validator = [\n  param('matchId').custom(matchId => isEntityExists(matchId, Match)),\n  param('matchId').custom(async matchId => {\n    const { isActive } = await Match.findById(matchId).exec();\n\n    if (isActive) throw new Error('Match is already started');\n\n    return true;\n  })\n];\n\nexport const handler = withValidationHandler(async (req, res) => {\n  const { tournamentId, matchId } = req.params;\n\n  await Match.update(\n    { _id: matchId },\n    { $set: { isActive: true, startedAt: Date.now() } },\n  ).exec();\n\n  const modifiedTournament = await Tournament\n    .findById(tournamentId)\n    .populate('creatorId')\n    .populate('applicants')\n    .populate('matches')\n    .populate('creator', '_id username summonerName')\n    .exec();\n\n  res.json(modifiedTournament);\n});\n","import pick from 'lodash/pick';\nimport pickBy from 'lodash/pickBy';\nimport negate from 'lodash/negate';\nimport difference from 'lodash/difference'\nimport isUndefined from 'lodash/isUndefined';\n\nimport { param, body, check } from 'express-validator/check';\nimport { sanitizeBody } from 'express-validator/filter';\n\nimport Tournament from '../../../models/tournament';\n\nimport {\n  isRequestHasCorrectFields,\n  isUserHasToken,\n  isEntityExists\n} from '../../validators';\n\nimport { withValidationHandler } from '../../helpers';\n\nconst validator = [\n  check().custom((value, { req }) => isUserHasToken(value, req)),\n  param('id')\n    .custom(id => isEntityExists(id, Tournament))\n    .custom(async (tournamentId, { req }) => {\n      const { _id } = req.decoded;\n\n      const { creator, isReady } = await Tournament.findById(tournamentId);\n\n      if (String(creator) !== String(_id)) {\n        throw new Error('You are not allowed to edit this tournament');\n      }\n\n      if (isReady) {\n        throw new Error('You can\\'t edit rewards after tournament has started');\n      }\n\n      return true;\n    })\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  const { id } = req.params;\n  const { rewards } = req.body;\n\n  await Tournament.update({ _id: id }, { $set: { rewards } }, { new: true }).exec();\n\n  const modifiedTournament = await Tournament\n    .findById(id)\n    .populate('creatorId')\n    .populate('applicants')\n    .populate('matches')\n    .populate('creator', '_id username summonerName')\n    .exec();\n\n  res.json(modifiedTournament);\n});\n\nexport { validator, handler };\n","import isEmpty from 'lodash/isEmpty';\nimport Tournament from '../../../models/tournament';\nimport Reward from '../../../models/reward';\n\nimport { param, body, check } from 'express-validator/check';\n\nimport {\n  isUserHasToken,\n  isEntityExists\n} from '../../validators';\n\nimport { withValidationHandler } from '../../helpers';\n\nconst validator = [\n  check().custom((value, { req }) => isUserHasToken(value, req)),\n  param('id').custom(id => isEntityExists(id, Tournament)),\n  body().custom(async (tournamentId, { req }) => {\n      const { id } = req.params;\n      const tournamentRewards = await Tournament.findById(id).select('rewards');\n\n      if(isEmpty(tournamentRewards)){\n        return true;\n      }\n\n      return true;\n    }),\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  const { id } = req.params;\n\n  const tournamentRewards = await Tournament\n    .findById(id)\n    .select('rewards')\n    .lean();\n\n  if(isEmpty(tournamentRewards)){\n    res.send({\n      rewards: []\n    });\n\n    return;\n  }\n\n  const rewardsIds = Object.keys(tournamentRewards.rewards);\n\n  const rewards = await Reward\n    .find({ _id: { $in: rewardsIds } })\n    .select('-key -isClaimed -userId');\n\n  res.send(rewards);\n});\n\nexport { handler, validator };\n","import { param } from 'express-validator/check';\n\nimport Tournament from '../../models/tournament';\n\nimport { isEntityExists } from '../validators';\nimport { withValidationHandler } from '../helpers';\n\nexport const validator = [\n  param('id').custom(id => isEntityExists(id, Tournament)),\n  param('id').custom(async id => {\n    const { isStarted } = await Tournament.findById(id).exec();\n\n    if (isStarted) throw new Error('Tournamnet is already started');\n\n    return true;\n  })\n];\n\nexport const handler = withValidationHandler(async (req, res) => {\n  const { id } = req.params;\n\n  await Tournament.update(\n    { _id: id },\n    {\n      $set: {\n        isStarted: true,\n        isForecastingActive: false\n      }\n    },\n    { new: true }\n  ).exec();\n\n  const modifiedTournament = await Tournament\n    .findById(id)\n    .populate('winner')\n    .populate('creatorId')\n    .populate('applicants')\n    .populate('matches')\n    .populate('creator', '_id username summonerName')\n    .exec();\n\n  res.json(modifiedTournament);\n});\n","import { param, body, check } from 'express-validator/check';\n\n// import Tournament from '../../models/tournament';\n// import User from '../../models/user';\nimport Tournament from '../../models/tournament'\n\nimport { isEntityExists } from '../validators';\nimport { withValidationHandler } from '../helpers';\n\nexport const validator = [\n  param('id').custom(id => isEntityExists(id, Tournament)),\n  check('id')\n    .custom(async (_, { req }) => {\n      const { _id: userId } = req.decoded;\n      const { summoners } = req.body;\n      const { id } = req.params;\n\n      try {\n        // const tournament = await Tournament.find({ _id: id });\n        // const isAlreadyViewer = tournament.viewers.find(viewer => viewer.userId === userId);\n  \n        // if (isAlreadyViewer) {\n        //   throw new Error('User already is a viewer');\n        // }\n  \n        // if(!summoners){\n        //   throw new Error(\"You can't apply as an viewer without choosing summoners\");\n        // }\n  \n        // if(summoners.length > 5){\n        //   throw new Error(\"You can't choose more than 5 summoners\");\n        // }\n      } catch (error) {\n        console.log(error);\n      }\n      return true;\n    })\n];\n\nexport const handler = withValidationHandler(async (req, res) => {\n  const { id } = req.params;\n  const { _id: userId } = req.decoded;\n  const { summoners } = req.body;\n\n  await Tournament.update(\n    { _id: id },\n    { $push: { viewers: { userId, summoners } }\n  });\n\n  const modifiedTournament = await Tournament\n    .findById(id)\n    .populate('winner')\n    .populate('creatorId')\n    .populate('applicants')\n    .populate('matches')\n    .populate('creator', '_id username summonerName')\n    .exec();\n\n  res.json(modifiedTournament);\n});\n","import UserModel from '../../models/user';\n\nexport default async (req, res) => {\n  const users = await UserModel.find();\n  res.json(users);\n}","import { param } from 'express-validator/check';\n\nimport UserModel from '../../models/user';\n\nimport { withValidationHandler } from '../helpers';\nimport { isEntityExists } from '../validators';\n\nconst validator = [\n  param('id')\n    .custom((value, req) => isEntityExists(value, UserModel))\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  const userId = req.params.id;\n\n  try {\n    const user = await UserModel.findOne({ _id: userId })\n      .select('-password');\n\n    res.status(200).json(user);\n  } catch (error) {\n    res.status(500).json({\n      error\n    });\n  }\n});\n\nexport { validator, handler };","import { check } from 'express-validator/check';\n\nimport UserModel from '../../models/user';\n\nimport { withValidationHandler } from '../helpers';\nimport { isUserHasToken } from '../validators';\n\nconst validator = [\n  check()\n    .custom((value, { req }) => isUserHasToken(value, req))\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  const { _id } = req.decoded;\n\n  try {\n    const user = await UserModel.findOne({ _id })\n      .select('-password');\n\n    res.status(200).json(user);\n  } catch (error) {\n    res.status(500).json({\n      error\n    });\n  }\n});\n\nexport { validator, handler };","import express from 'express';\n\nimport getAllUsers from './get';\n\nimport { validator as getUserProfileValidator, handler as getUserProfile } from './getUserProfile';\n\nimport { validator as userUpdateValidator, handler as updateUserHandler } from './updateUserProfile';\n\nimport { validator as getUserByIdValidator, handler as getUserByIdHandler } from './getUserById';\n\nlet router = express.Router();\n\nconst UsersController = () => {\n  router.get('/me', getUserProfileValidator, getUserProfile);\n  router.patch('/me', userUpdateValidator, updateUserHandler);\n\n  router.get('/', getAllUsers);\n  router.get('/:id', getUserByIdValidator, getUserByIdHandler);\n\n  return router;\n};\n\nexport default UsersController;","import { body } from 'express-validator/check';\nimport pick from 'lodash/pick';\n\nimport UserModel from '../../models/user';\n\nimport { isRequestHasCorrectFields, isUserHasToken } from '../validators';\n\nimport { withValidationHandler } from '../helpers';\n\nconst validator = [\n  body()\n    .custom((value, { req }) => isUserHasToken(value, req))\n    .custom(value => isRequestHasCorrectFields(value, UserModel))\n];\n\nconst handler = withValidationHandler(async (req, res) => {\n  const { _id } = req.decoded;\n\n  try {\n    const user = await UserModel.findOneAndUpdate({ _id },\n      pick(req.body, [\n        'username',\n        'imageUrl',\n        'about',\n        'twitchAccount',\n        'summonerName',\n        'regionId',\n        'preferredPosition',\n        'contact',\n      ]),\n      { new: true },\n    );\n\n    res.status(200).json(user);\n  } catch (error) {\n    res.status(500).json({\n      error\n    });\n  }\n});\n\nexport { validator, handler };\n","import getModelFields from './helpers/getModelFields';\nimport difference from 'lodash/difference';\nimport isEmpty from 'lodash/isEmpty';\n\nexport const isPropertyValueUnique = async (property, model) => {\n  const key = Object.keys(property)[0];\n  const value = Object.values(property)[0];\n\n  if(!value){\n    return true;\n  }\n\n  const entity = await model.findOne(property);\n\n  if (entity) {\n    throw new Error(`Entity with key: ${key} and value: ${value} is already exist`);\n  }\n  \n  return true;\n};\n\nexport const isEntityExists = async (_id, model) => {\n  let isRequestSucces = false;\n\n  try {\n    const entity = await model.findById(_id);\n    isRequestSucces = true;\n  } catch(erorr){\n\n  }\n  \n  if(!isRequestSucces){\n    throw new Error(`Entity with _id: ${_id} doesn't exist`);\n  }\n\n  return true;\n}\n\nexport const isRequestHasCorrectFields = (requestFields, model) => {\n  const modelFields = getModelFields(model);\n  const diff = difference(Object.keys(requestFields), modelFields);\n\n  if(diff.length){\n    throw new Error(`${model.modelName} shouldn't contain ${diff.join(', ')} fields`);\n  }\n\n  return true;\n}\n\nexport const isUserHasToken = (value, req) => {\n  if(req.decoded){\n    return true;\n  }\n\n  throw new Error(`You are not authorized`);\n}","import UserModel from '../models/user';\n\nconst AdminVerifyMiddleware = (req, res, next) => {\n  const isAdmin = req.decoded.isAdmin;\n\n  if (!isAdmin) {\n    res.send({ error: 'You are not admin' });\n    return;\n  }\n\n  next();\n}\n\nexport default AdminVerifyMiddleware;","import express from 'express';\nimport jwt from 'jsonwebtoken';\n\nlet router = express.Router();\n\nconst AuthVerifyMiddleware = (app) => {\n  router.use((req, res, next) => {\n    const token = req.body.token || req.query.token || req.headers['x-access-token'];\n\n    if (token) {\n      jwt.verify(token, app.get('superSecret'), (err, decoded) => {\n        if (err) {\n          return res.json({\n            success: false,\n            message: 'Failed to authenticate token.'\n          });\n        } else {\n          // if everything is good, save to request for use in other routes\n          req.decoded = decoded;\n          next();\n        }\n      });\n    } else {\n      return res.status(403).json({\n        success: false,\n        message: 'No token provided.'\n      });\n    }\n  });\n\n  return router;\n}\n\nexport default AuthVerifyMiddleware;","import AuthVerifyMiddleware from \"./authVerifyMiddleware\";\nimport AdminVerifyMiddleware from \"./adminVerifyMiddleware\";\n\nexport {\n  AuthVerifyMiddleware,\n  AdminVerifyMiddleware,\n};\n","import mongoose from 'mongoose';\nconst Schema = mongoose.Schema;\n\nconst refTo = schemaName => ({ type: Schema.Types.ObjectId, ref: schemaName })\n\nexport default mongoose.model('Match',\n  new Schema({\n    tournamentId: refTo('Tournament'),\n    name: String,\n    playersResults: [{\n      _id: false,\n      userId: refTo('User'),\n      results: {\n        type: Map,\n        of: Number\n      }\n    }],\n    isActive: {\n      type: Boolean,\n      default: false,\n    },\n    startedAt: Date,\n    endAt: Date,\n    updatedAt: Date,\n  },\n    {\n      toObject: { virtuals: true },\n    }\n  ));\n","import mongoose from 'mongoose';\nconst Schema = mongoose.Schema;\n\nconst refTo = schemaName => ({\n  type: Schema.Types.ObjectId,\n  ref: schemaName,\n  default: null\n});\n\nexport default mongoose.model('Reward', new Schema({\n  userId: refTo('User'),\n  key: {\n    type: String,\n    unique: true,\n  },\n  isClaimed: {\n    type: Boolean,\n    default: false,\n  },\n  description: {\n    type: String,\n  },\n  image: {\n    type: String,\n  },\n}));","import mongoose from 'mongoose';\nimport isEmpty from 'lodash/isEmpty';\n\nconst Schema = mongoose.Schema;\n\nconst refTo = schemaName => ({ type: Schema.Types.ObjectId, ref: schemaName });\n\nconst schema = new Schema(\n  {\n    name: String,\n    description: String,\n    url: String,\n    imageUrl: String,\n    createdAt: Date,\n    startAt: Date,\n    price: {\n      type: Number,\n      min: 0\n    },\n    rewards: {\n      type: Map,\n      of: String,\n      default: {},\n    },\n    rules: {\n      type: Map,\n      of: Number,\n      default: {},\n    },\n    isForecastingActive: {\n      type: Boolean,\n      default: false\n    },\n    isStarted: {\n      type: Boolean,\n      default: false\n    },\n    isFinalized: {\n      type: Boolean,\n      default: false\n    },\n    winners: [\n      {\n        _id: false,\n        id: refTo('User'),\n        position: {\n          type: String,\n          enum: ['summoner', 'viewer'],\n        },\n        place: Number,\n      }\n    ],\n    creator: refTo('User'),\n    summoners: [refTo('User')],\n    applicants: [\n      {\n        user: refTo('User'),\n        status: {\n          type: String,\n          enum: ['PENDING', 'REJECTED', 'ACCEPTED'],\n          default: 'PENDING'\n        }\n      }\n    ],\n    viewers: [\n      {\n        userId: String,\n        summoners: [String]\n      }\n    ]\n  },\n  {\n    toObject: { virtuals: true },\n    toJSON: { virtuals: true }\n  }\n);\n\nschema.virtual('matches', {\n  ref: 'Match',\n  localField: '_id',\n  foreignField: 'tournamentId'\n});\n\nschema.virtual('isEmpty').get(function() {\n  if (isEmpty(this.rules) || isEmpty(this.rewards) || this.matches.length === 0) {\n    return true;\n  }\n\n  return false;\n});\n\nschema.virtual('isApplicationsAvailable').get(function() {\n  if (!this.isEmpty && !this.isForecastingActive && !this.isStarted) {\n    return true;\n  }\n\n  return false;\n});\n\nexport default mongoose.model('Tournament', schema);\n\n","import mongoose from 'mongoose';\nimport { REGIONS } from '../../common/constants';\nconst Schema = mongoose.Schema;\n\nexport default mongoose.model('User', new Schema({\n  username: { type: String, unique: true, required: true },\n  email: {\n    type: String,\n    unique: true,\n    required: true,\n    partialFilterExpression: { email: { $type: 'string' } }\n  },\n  imageUrl: { type: String, default: '' },\n  about: { type: String, default: '' },\n  isAdmin: { type: Boolean, default: false },\n  isVerified: { type: Boolean, default: false },\n  canProvideTournaments: { type: Boolean, default: false },\n  twitchAccount: { type: String, default: '' },\n  summonerName: { type: String, default: '' },\n  contact: {\n    type: String,\n    default: ''\n  },\n  regionId: { type: String, enum: ['', ...REGIONS], default: '' },\n  preferredPosition: { type: String, enum: ['', 'adc', 'mid', 'top', 'jungle', 'support'], default: '' },\n},\n  {\n    toObject: { virtuals: true },\n  }\n));","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-validator/check\");","module.exports = require(\"express-validator/filter\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"lodash/defaults\");","module.exports = require(\"lodash/difference\");","module.exports = require(\"lodash/find\");","module.exports = require(\"lodash/isEmpty\");","module.exports = require(\"lodash/isUndefined\");","module.exports = require(\"lodash/negate\");","module.exports = require(\"lodash/omit\");","module.exports = require(\"lodash/pick\");","module.exports = require(\"lodash/pickBy\");","module.exports = require(\"lodash/uniqBy\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"path\");","module.exports = require(\"socket.io\");"],"sourceRoot":""}